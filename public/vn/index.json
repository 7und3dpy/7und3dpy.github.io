[{"categories":["study"],"content":"Bài viết mẫu hiển thị các kiến thức cơ bản về toán.","date":"2023-12-10","objectID":"/vn/trr/","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Bài toán chia kẹo Euler, $n$ biến, tổng $m$ \\[x_1 + x_2 + … + x_n = m\\] ","date":"2023-12-10","objectID":"/vn/trr/:0:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Trường hợp nghiệm không âm \\[S = C_{m+n-1}^{n-1}\\] ","date":"2023-12-10","objectID":"/vn/trr/:1:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Trường hợp nghiệm dương \\[S = C_{m-1}^{n-1}\\] Bài toán chọn phần tử Có bao nhiêu cách lây ra $k$ phần tử trong $n$ phần tử được xếp trên đường thẳng sao cho không có 2 phần tử kề nhau cùng được lấy ra ? \\[S(n, k) = C_{n-k+1}^{k}\\] Có bao nhiêu cách lấy ra $k$ phần tử trong $n$ phần tử được xếp trên đường tròn sao cho không có 2 phần tử kề nhau cùng được lấy ra ? \\[S(n, k) = \\frac{n}{n-k}C_{n-k}^k\\] Có bao nhiêu dãy số gồm $n$ phần tử $a_1, a_2, … , a_n$, trong đó mỗi phần tử lấy từ giá trị $0, 1, 2$ đồng thời không chứa 2 số $0$ đứng liền nhau và cũng không chứa 2 số $1$ đứng liền nhau \\[S_n = 2S_{n-1} + S_{n-2}, S_1 = 3, S_2 = 7\\] Có bao nhiêu cách chọn hai tập hợp $A, B \\subset C$ khác rỗng sao cho $A \\cup B = C$, biết tập $C$ có $n$ phần tử \\[S(n) = 3^{n-1}\\] Trường hợp $A, B$ có thể rỗng \\[S(n) = 3^n\\] Trường hợp $A, B$ không rỗng, không giao nhau \\[S(n) = 2^{n-1} - 1\\] Bài toán xếp, bài toán đếm Số nguyên từ $1$ đến $n$ chia hết cho $k$ là: \\[S(n,k) = \\lfloor \\frac{n}{k} \\rfloor\\] Bài toán xếp khách Lucas: Có một bàn tròn, xung quanh có $2n$ ghế. Cần sắp chỗ cho $n$ cặp vợ chồng sao cho các ông ngồi xen kẽ các bà và không có cặp vợ chồng nào ngồi cạnh nhau. Hỏi có bao nhiêu cách xếp ? \\[S(n,k) = 2.n!.(\\sum_{i=0}^n(-1)^i\\frac{2n}{2n - i}C_n^i(n-i)!)\\] Có bao nhiêu số nhị phân $n$ bit mà không có 2 bit $1$ nào cạnh nhau? \\[S(n) = F_{n+2} , F(1) = 1, F(2) = 1\\] Có bao nhiêu hoán vị của (1, 2, 3, 4, … , n) sao cho hoán vị $i$ không nằm ở vị trí thứ $i$ \\[S(n) = n!(\\sum_{k=0}^{n}\\frac{(-1)^k}{k!}) = \\lfloor\\frac{n!}{e} + \\frac{1}{2}\\rfloor\\] Tính chẵn lẻ: $S(1)$ chẵn, $S(2)$ lẻ Có bao nhiêu hoán vị của $(1, 2, 3, 4, …, n)$ sao cho không có 2 số chẵn nào cạnh nhau Trường hợp $n = 2k + 1$ \\[S(2k + 1) = \\frac{(k+2)!(k+1)!}{2}\\] Trường hợp $n = 2k$ \\[S(2k) = k!(k + 1)!\\] Có bao nhiêu hoán vị của $(1, 2, 3, 4, … , n)$ sao cho không có 2 số lẻ nào cạnh nhau Trường hợp $n = 2k + 1, 2k$ \\[S(2k) = S(2k + 1) = k!(k+1)!\\] Có bao nhiêu chữ số $k \u003c 9$ chữ số mà $a_1 \u003c a_2 \u003c … \u003c a_k$ hoặc $a_1 \u003e a_2 \u003e … \u003e a_k$ \\[S(k) = 2C_9^k + C_9^{k-1}\\] Bài toán chia miền, phân hoạch Trên mặt phẳng, kẻ $n$ đường thẳng sao cho không có 2 đường thẳng nào song song và 3 đường thẳng nào đồng quy. Hỏi mặt phẳng chia làm mấy phần ? \\[S(n) = \\frac{n^2 + n + 2}{2}\\] Có bao nhiêu cách phân hoạch tập $n$ phần tử thành $k$ phần tử khác rỗng \\[S(n,k) = \\frac{1}{k!}\\sum_{i=0}^k(-1)^iC_k^i(k - i)^n\\] Bài toán tìm số nhỏ nhất để tồn tại Với $m$ chia hết cho $k$ bất kỳ, cần chọn ít nhất bao nhiêu số để luôn tồn tại $m$ có tổng chia hết cho $k$ \\[S(m, k) = m + k - 1\\] Hàm sinh VD: Tìm nghiệm không âm của phương trình $n = a + b + c$ trong đó $0 \\leq a \\leq 3, 0 \\leq b \\leq 2, 0 \\leq c \\leq 4$ Đặt $g(x) = (1 + x + x^2 + x^3)(1 + x + x^2)(1 + x + x^2 + x^3 + x^4)$ Khi đó đáp án là hệ số của $x^n$ Mở rộng hơn là ta có thể cho chuỗi đa thức vô hạn Đẳng thức hàm sinh \\[\\frac{1}{(1 - x)^n} = \\sum_{k = 0}^{\\infty}C_{n+k-1}^kx^k\\] Xây dựng dãy nhị phân Dãy đầu tiên là $0, 0, 0, 0 … 0$ Dãy cuối cùng là $1, 1, 1, 1 … 1$ Dãy hiện tại là $b_1, b_2, … , b_n$ ","date":"2023-12-10","objectID":"/vn/trr/:2:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thuật toán sinh kế tiếp Tìm $i$ đầu tiên thỏa mãn $i = 0$ (duyệt từ $n$ về $1$) Gán lại $b_i = 1$ và $b_j = 0 \\forall j \u003e i$ ta được dãy $b_n$ là dãy kế tiếp Sinh tập con $m$ phần tử của tập $n$ phần tử cho $X = 1, 2, 3, … , n$ Tập đầu tiên 1, 2, 3, … , m$ Tập cuối cùng là $(n - m + 1, n - m + 2, … ,n) Dãy hiện tại $a_1, a_2, … , a_m$ ","date":"2023-12-10","objectID":"/vn/trr/:3:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thuật toán sinh kế tiếp Tìm từ phải sang trái mà phần tử đó có thể tăng được nữa Cộng 1 đơn vị vào phần tử đó, các phần tử tiếp theo là dãy liên tiếp Cách tìm ngược Tìm từ phải sang trái phần tử có thể giảm Giảm 1 đơn vị và thay tất cả phía sau thành phần tử cuối ngược lại Sinh hoán vị tập $n$ phần tử Hoán vị đầu tiên $(1, 2, 3, …, n)$ Hoán vị cuối cùng $(n, n - 1, … , 2, 1)$ Hoán vị hiện tại $(a_1, a_2, …, a_n)$ ","date":"2023-12-10","objectID":"/vn/trr/:4:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thuật toán sinh kế tiếp Tìm từ bên phải số thỏa mãn $a_j$ thỏa mãn $a_j \u003c a_{j+1}$ Tìm từ bên phải $a_j$ số nhỏ nhất $a_k$ mà lớn hơn $a_j$ Đổi chỗ $a_j, a_k$ Lật ngược $a_{j+1}$ đến $a_n$ Thuật toán quay lui Cho $A_1, A_2, …, A_n$ là các tập hữu hạn. Ký hiệu \\[X = A_1 \\times A_2 \\times … \\times A_n = (x_1, x_2, …, x_n): x_i \\in A_i\\] Giả sử $P$ là tính chất cho trên $X$. Tìm tất cả các phần tử của $X$ thỏa mãn tính chất $P$ \\[D = {x = (x_1, x_2, … , x_n) \\in X: x \\hspace{0.2cm} \\text{thỏa mãn tính chất} \\hspace{0.2cm}P} \\] Các phần tử của $D$ được gọi là lời giải chấp nhận được ","date":"2023-12-10","objectID":"/vn/trr/:5:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Lời giải bộ phận Ta gọi lời giải bộ phận cấp $k$ là bộ có thứ tự gồm $k$ thành phần $(a_1, a_2, …, a_k) trong đó $a_i \\in A_i$ ","date":"2023-12-10","objectID":"/vn/trr/:6:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Lời giải tổng quát Giả sử ta đang có lời giải bộ phận cấp $k-1$ Gọi $S_k \\cup A_k$ là tập các phần tử có thể được chọn cho $a_k$ Mã giả như sau: def Backtrack(k: integer): Xây dựng S_k for y in S_k: a_k = y if k == n: Ghi nhận lời giải else: Backtrack(k+1) Đây là trường hợp đẹp nhất, còn trường hợp thông thường là duyệt hết $A_k$ và kiểm tra xem có phù hợp không Lệnh để gọi thuật toán quay lui là Backtrack(1) Mấu chốt ở đây là chọn $S_k$ sao cho hợp lý Dưới đây là các tập hợp và $S_k$ của từng bài toán Bài toán liệt kê xâu nhị phân \\[B = {(x_1, x_2, …, x_n): x_i \\in {0,1}}\\] $S_k = 0, 1$ Bài toán liệt kê tập con $m$ phần tử của tập $N = 1, 2, 3, …, n$ \\[S(m, n) = {(x_1, x_2, …, x_m) \\in N^m: 1 \\leq x_1 \u003c x_2 \u003c … \u003c x_m \\leq n}\\] $S_k = a_{k-1} + 1, a_{k-1} + 2, …, n - m + k$ Tập các hoán vị $n$ phần tử $N = 1, 2, 3, …, n$ \\[S(n) = {(x_1, x_2, …, x_n) \\in N^m: x_i \\neq x_j; i \\neq j}\\] $S_k = N \\setminus a_1, a_2, … , a_{k-1}$ Đồ thị Đồ thị lẻ cạnh luôn tồn tại một đỉnh bậc chẵn Số đỉnh bậc lẻ luôn luôn là số chẵn ","date":"2023-12-10","objectID":"/vn/trr/:7:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Bài toán đếm số đường đi Đồ thị đầy đủ $K_n$. Số lượng đường đi đơn bắt đầu từ đỉnh $1$ và kết thúc tại đỉnh $n$ là bao nhiêu ? \\[S(n) = (n - 2)!\\] ","date":"2023-12-10","objectID":"/vn/trr/:8:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Tính liên thông Cho $G$ là đồ thị $n$ đỉnh, $m$ cạnh, $k$ thành phần liên thông, khi đó \\[m \\leq \\frac{(n - k)(n - k + 1)}{2}\\] Công thức này có thể kiểm tra tính liên thông bằng cách thay $k = 1$. Nếu \\[|E| \u003e \\frac{(|V| - 1)|V|}{2} hoặc |E| \u003c |V| - 1\\] thì đồ thị không liên thông Dấu hiệu kiểm tra tính liên thông Định lý Dirac: Nếu $G$ là đơn đồ thị vô hướng với $n \\geq 3$ đỉnh, và $\\forall v, deg(v) \\geq \\frac{n}{2}$, thì $G$ có chu trình Hamilton $\\Rightarrow$ liên thông Định lý Ore: Nếu $G$ là đơn đồ thị vô hướng với $n \\geq 3$ đỉnh, và $deg(u) + deg(v) \\geq n$ với mọi cặp đỉnh không kề nhau $u, v$, thì $G$ có chu trình Hamilton $\\Rightarrow$ liên thông Đồ thị $k$ - liên thông: Nếu như muốn phá vỡ tính liên thông của nó ta phải bỏ ít nhất $k$ đỉnh Mọi đồ thị không có chu trình đều là đồ thị 2 phía ","date":"2023-12-10","objectID":"/vn/trr/:9:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đồ thị 2 phía Đơn đồ thị được gọi là hai phía khi và chỉ khi không chứa chu trình độ dài lẻ Cho $G$ là đồ thị hai phía $n$ đỉnh và $m$ cạnh, khi đó $m \\leq \\frac{n^2}{4} Cho $G$ là đồ thị hai phía $n$ đỉnh và $m$ cạnh. Gọi $K$ và $k$ là bậc lớn nhất và nhỏ nhất của các đỉnh của $G$. Khi đó \\[k \\leq \\frac{2m}{n} \\leq K\\] ","date":"2023-12-10","objectID":"/vn/trr/:10:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đồ thị phẳng Đồ thị là phẳng khi và chỉ khi nó không chứa đồ thị con đồng phôi $K_{3,3}$ hoặc $K_5$ Đồ thị $Q_n$ không phẳng Xem đồ thị phẳng liên thông ở phần Công thức Euler ","date":"2023-12-10","objectID":"/vn/trr/:11:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đồ thị Euler Đi qua mỗi cạnh đúng 1 lần Đa đồ thị vô hướng liên thông có chu trình Euler khi và chỉ khi nó không có đỉnh bậc lẻ Đa đồ thị vô hướng liên thông có đường đi Euler khi và chỉ khi nó có không quá 2 đỉnh bậc lẻ ","date":"2023-12-10","objectID":"/vn/trr/:12:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đồ thị Hamilton Đi qua mỗi đỉnh đúng 1 lần $Q_n (n \\geq 3)$ là đồ thị Hamilton Đồ thị có hai đỉnh bậc 1 $\\Rightarrow$ Không là đồ thị Hamilton Đồ thị có 3 đỉnh bậc 1 $\\Rightarrow$ Không phải là nửa Hamilton Định lý Dirac: Nếu $G$ là đơn đồ thị vô hướng với $n \\geq 3$ đỉnh, và $\\forall v, deg(v) \\geq \\frac{n}{2}$, thì $G$ có chu trình Halmiton Định lý Ore: Nếu $G$ là đơn đồ thị vô hướng với $n \\geq 3$ đỉnh, và $deg(u) + deg(v) \\geq n$ với mọi cặp đỉnh không kề nhau $u, v$, thì $G$ có chu trình Halmiton Cây và rừng ","date":"2023-12-10","objectID":"/vn/trr/:13:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Cây Tính chất cơ bản của cây: Giả sử $T$ là đồ thị $n$ đỉnh. Các mệnh đề sau là tương đương $T$ là cây $T$ không chứa chu trình và có $n - 1$ cạnh $T$ liên thông và có $n - 1$ cạnh $T$ liên thông và mỗi cạnh của nó đều là cầu Hai đỉnh bất kỳ của $T$ nối với nhau bởi đúng 1 đường đi đơn $T$ không chứa chu trình nhưng cứ thêm 1 cạnh là ta thu được 1 chu trình Mọi cây đều là đồ thị 2 phía ","date":"2023-12-10","objectID":"/vn/trr/:14:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Rừng Công thức liên hệ giữa đỉnh cây cạnh của một rừng \\[\\text{Đỉnh}=\\text{Cây}+\\text{Cạnh}\\] Bài toán đếm số cây khung ","date":"2023-12-10","objectID":"/vn/trr/:15:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Ma trận Laplace Cho các đồ thị có các đỉnh $v_1, v_2, …, v_n$. Ma trận Laplace $L$ là ma trận $V \\times V$ thỏa mãn \\[ L_{i,j}=\\left{ \\begin{matrix} deg(v_i),~i=j \\ -1,~i \\neq j, ~(v_i,v_j) \\in E \\ 0,~other \\ \\end{matrix}\\right \\] Đếm số cây khung bằng cách tính định thức ma trận của phần bù đại số bất kỳ của $L$ Nói đơn giản, bỏ cột dấu hàng đầu và tính định thức của nó là ra số cây khung Số giá trị đặc trưng nhận giá trị 0 là số thành phần liên thông ","date":"2023-12-10","objectID":"/vn/trr/:16:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đếm số cây khung của đồ thị 2 phía đầy đủ $K_{m,n}$ \\[T(m,n) = n^{m-1}m^{n-1}\\] ","date":"2023-12-10","objectID":"/vn/trr/:17:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đếm số cây khung của đồ thị ô lưới $G_k(n)$ là đồ thị ma trận $k x n$ ô lưới Dưới đây là công thức truy hồi của một số cây khung đồ thị k = 2 \\[T(n) = 4T(n - 1) - T(n - 2)\\] \\[T = {1,4,15,56,209, …}\\] k = 3 \\[T(n) = 15T(n - 1) - 32T(n - 2) + 15T(n - 3) - T(n - 4)\\] \\[T = {1, 15, 192, 2415, 30305, …}\\] Công thức Euler Cho $G$ là đồ thị liên thông phẳng, $D$ là số đỉnh, $M$ là số mặt, $C$ là số cạnh thì ta có biểu thức liên hệ \\[D + M - C = 2\\] ","date":"2023-12-10","objectID":"/vn/trr/:18:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Hệ quả với đồ thị phẳng liên thông $G$ là đồ thị phẳng liên thông với $n \\geq 3$ đỉnh, $m$ cạnh thì ta có: \\[m \\leq 3n - 6\\] $G$ là đồ thị phẳng liên thông $n$ đỉnh và $m$ cạnh không chứa tam giác \\[m \\leq 2n - 4\\] Tô màu đồ thị Tô màu đồ thị là tô mỗi đỉnh 1 màu sao cho hai đỉnh kề nhau thì không chung màu Định lý 4 màu: Mọi bản đồ hành chính đều có thể tô bởi bốn màu sao cho không có hai đơn vị hành chính có chung biên giới nào bị tô bởi cùng màu ","date":"2023-12-10","objectID":"/vn/trr/:19:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Đồ thị đối ngẫu Đồ thị đối ngẫu $G’$ của đồ thị $G(V, E)$ với các tập miền $R$ là đồ thị với tập đỉnh và cạnh Tập đỉnh của $G*$ là miền $R$ Hai miền có cạnh chung thì được nối với nhau ","date":"2023-12-10","objectID":"/vn/trr/:20:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Sắc số $X(G)$ là số $c$ nhỏ nhất sao cho có thể tô được đỉnh của $G$ bởi $c$ màu $X(G) = 2$ nếu $G$ là đồ thị hai phía và ngược lại $X(G) \\geq \\Delta G$ (là số bậc lớn nhất) Mọi đồ thị phẳng đều tô được bởi 4 màu $X(G) \\leq \\Delta(G) + 1$ với $G$ là đơn đồ thị vô hướng ","date":"2023-12-10","objectID":"/vn/trr/:21:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thuật toán tham lam Khởi tạo: Sắp xếp các đỉnh theo thứ tự $v_1, v_2, …, v_n$, tô $v_1$ màu $1$ Với $2 \\leq j \\leq n$ Tô màu $k \u003e 0$ là chỉ số nhỏ nhất cho đỉnh $v_j$ khác màu với đỉnh kề nó ","date":"2023-12-10","objectID":"/vn/trr/:22:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Tô màu cạnh Tô màu cạnh của đồ thị sao cho không có 2 cạnh nào chung đỉnh tô bởi 1 màu Số màu ít nhất để sử dụng để tô màu cạnh của đồ thị $G$ được gọi là sắc số cạnh và ký hiệu là $X’(G)$ \\[\\Delta G \\leq X’(G) \\leq \\Delta G + 1\\] Đối với đơn đồ thị hai phía $G$ thì ta có: \\[X’(G) = \\Delta(G)\\] Biểu diễn đồ thị Giả sử các đỉnh được đánh số theo thứ tự từ $1$ đến $|V| = n$ Có |E| = m ","date":"2023-12-10","objectID":"/vn/trr/:23:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Ma trận kề Ma trận $A$ kích thước $n \\times m$ xác định với $a_{i,j} = 1$ nếu đỉnh $i, j$ nối với nhau Tức là nhìn từ số cột sang số bảng Tính chất ma trận kề của đồ thị vô hướng $A = A^T$ ","date":"2023-12-10","objectID":"/vn/trr/:24:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Ma trận trọng số Khác với ma trận kề thì $a_{i,j} = k$ với $k \u003e 0$ thì nếu đỉnh $i,j$ nối với nhau và có trọng số $k$ Các thuật toán duyệt đồ thị ","date":"2023-12-10","objectID":"/vn/trr/:25:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Duyệt theo chiều rộng của đồ thị vô hướng (BFS) Độ phức tạp $O(|V| + |E|)$ Chọn đỉnh bắt đầu Duyệt tất cả các con của nó theo thứ tự từ điển Vào các con của nó duyệt các con của nó tiếp Ứng dụng: Tìm đường đi ngắn nhất theo số cạnh Kiểm tra tính liên thông ","date":"2023-12-10","objectID":"/vn/trr/:26:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Duyệt theo chiều sâu của đồ thị (DFS) Độ phức tạp $O(|V| + |E|)$ Chọn đỉnh bắt đầu Duyệt con đầu tiên của nó theo thứ tự từ điển Bình thường là màu đen Nếu duyệt lại phần tử trong cây Cạnh ngược (từ con tới tổ tiên) $\\Rightarrow$ Quy ước màu đỏ Cạnh tới (từ tổ tiên tới cháu) $\\Rightarrow$ Quy ước màu xanh dương Cạnh vòng (không có quan hệ họ hàng) $\\Rightarrow$ Quy ước màu xanh lá Nếu không còn con thì leo lên cha duyệt con thử Điểm mà bị leo thì được thêm vào danh sách Topo $T$ Ứng dụng Tìm đường đi từ $s \\rightarrow t$ Kiểm tra liên thông Phát hiện chu trình: Đồ thị không chứa chu trình khi và chỉ khi DFS không phát hiện ra cạnh ngược Kiểm tra liên thông mạnh Định hướng đồ thị ","date":"2023-12-10","objectID":"/vn/trr/:27:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thứ tự Topo Đồ thị không có chu trình $\\Leftrightarrow$ DFS không có cạnh ngược $\\Leftrightarrow$ Sắp được Topo Thứ tự Topo là một thứ tự sắp xếp của các đỉnh trong một đồ thị có hướng sao cho mỗi cạnh trong đồ thị chỉ đi từ một đỉnh có thứ tự nhỏ hơn đến một đỉnh có thứ tự lớn hơn Kiểm tra Topo Nếu có 1 đỉnh $u$ trước $v$ mà nó không có cạnh trong đồ thị DFS đồ thị trên Thứ tự Topo duyệt thoe cây từ trên xuống dưới Thứ tự Topo là đảo ngược của danh sách Topo $T$ Bài toán cây khung nhỏ nhất ","date":"2023-12-10","objectID":"/vn/trr/:28:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Cây khung của đồ thị Giả sử $G = (V, E)$ là đồ thị vô hướng liên thông. Cây $T = (V, F)$ với $F \\subset E$ được gọi là cây khung của $G$ Định lý: Số cây khung của đồ thị $K_n$ là $n^{n-2}$ Bài toán đường đi ngắn nhất ","date":"2023-12-10","objectID":"/vn/trr/:29:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Thuật toán Dijiktra Bất đẳng thức cận trên. Gọi $d[v]$ là cận trên độ dài đường đi ngắn nhất từ đỉnh $1 \\rightarrow v$, với mỗi đỉnh $u, v$ sao cho có cạnh từ $u \\rightarrow v$, ta luôn có: \\[d[v] - d[u] \\leq w(u,v)\\] Thứ tự các đỉnh được tìm thấy trong quá trình tìm kiếm đường đi ngắn nhất sẽ sắp xếp theo khoảng cách đối với đồ thị có trọng số không âm Các mệnh đề cần lưu ý: Nếu nhân đôi trọng số, thuật toán không đổi thứ tự các đỉnh Nếu thay đổi trọng số mà vẫn giữ bất đẳng thức thì thuật toán cũng không đổi Nếu thay đổi trọng số mà vẫn không giữ bất đẳng thức thì thuật toán sẽ đổi Bài toán luồng cực đại ","date":"2023-12-10","objectID":"/vn/trr/:30:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Mạng Mạng là đồ thị có hướng $G = (V, E)$ Có duy nhất một đỉnh $s$ không có cung đi vào gọi là đỉnh phát (nguồn) và duy nhất một đỉnh $t$ không có cung đi ra gọi là đỉnh thu (đích) Mỗi cung $e$ của $G$ được gắn với số không âm $c(e)$ được gọi là khả năng thông qua của $e$ ","date":"2023-12-10","objectID":"/vn/trr/:31:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Luồng trong mạng Luồng $f$ trong mạng $G = (V, E)$ là phép gán số $f(e)$ cho mỗi cạnh $e$ thỏa mãn điều kiện $0 \\leq f(e) \\leq c(e)$ Với mỗi $v \\neq s, t$ \\[\\sum_{e \\in E(v^-)} f(e) = \\sum_{e \\in E(v^+)}f(e)\\] Tức luồng ra bằng luồng vào tại mỗi đỉnh Giá trị của luồng \\[val(f) = \\sum_{e \\in E(s^+)}f(e) = \\sum_{e \\in E(t^-)}f(e)\\] ","date":"2023-12-10","objectID":"/vn/trr/:32:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Ước lượng luồng cực đại Xết 1 điểm thay trọng số Thay tất cả cạnh đi vào Thay cạnh đi vào bằng min(tổng max đi ra, cạnh đi vào) Thay tất cả cạnh đi ra Thay cạnh đi ra bằng min(tổng max đi vào, cạnh đi ra) Lược bỏ mạng con Mỗi mạng con là 1 mạng có 1 đỉnh là phát giả $s$ và 1 đỉnh là thu giả $t$ trong đó: Đỉnh thu giả $t$ không có đường đi tới các đỉnh nào trong mạng Không có đỉnh nào trong mạng có đường đi tới đỉnh phát giả $s$ Không có đỉnh nào trong mạng con (trừ $s$, $t$) có đường đi tới các đỉnh ngoài mạng con $\\rightarrow$ Có thể thay mạng con thành 1 đường đi duy nhất là $s \\rightarrow t$ sao cho đường đó cso trọng số = min(tổng ra $s$, tổng vào $t$) ","date":"2023-12-10","objectID":"/vn/trr/:33:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["study"],"content":"Tìm cực đại bằng cách dùng lát cắt Lát cắt là cách phân hoạch tập đỉnh $(S, T)$ sao cho $s \\in S, t \\in T$ \\[cap(S,T) = \\sum_{S \\rightarrow T}c(e)\\] Lát cắt cực tiểu là lát cắt sao cho $cap = max val$ ","date":"2023-12-10","objectID":"/vn/trr/:34:0","tags":["toanrr","hust","discrete math"],"title":"Discrete Math","uri":"/vn/trr/"},{"categories":["Internet"],"content":"This article shows how to protect yourself.","date":"2023-12-06","objectID":"/vn/baovechinhbanthan/","tags":["Protect","Prevent","Avoid"],"title":"Bảo vệ chính bản thân bạn","uri":"/vn/baovechinhbanthan/"},{"categories":["Internet"],"content":"Hướng dẫn thực hành căn bản về bảo mật thông tin cá nhân/danh tính trên không gian mạng khỏi Trinh sát phòng, chống tội phạm sử dụng công nghệ cao. Về việc chia sẻ thông tin trên mạng ","date":"2023-12-06","objectID":"/vn/baovechinhbanthan/:0:0","tags":["Protect","Prevent","Avoid"],"title":"Bảo vệ chính bản thân bạn","uri":"/vn/baovechinhbanthan/"},{"categories":["Internet"],"content":"Thông tin tuyệt đối không được chia sẻ Biệt danh, Họ, Tên Đệm và Tên thật được sử dụng trong cuộc sống hàng ngày / Họ, Tên Đệm và Tên pháp lý Ngày, tháng, năm sinh Thông tin về gia đình, bao gồm số thành viên trong gia đình, Biệt danh, Họ, Tên Đệm và Tên được sử dụng trong cuộc sống hàng ngày / Họ, Tên Đệm và Tên pháp lý Mối quan hệ trong gia đình và xã hội Địa chỉ nhà, nơi làm việc và địa chỉ trường học Số nhận dạng, bao gồm số bảo hiểm y tế, số căn cước công dân, số định dạng cá nhân Những giấy tờ được chính phủ cấp, như hộ chiếu, bằng lái xe, sổ hộ khẩu Ảnh chụp màn hình đầy đủ của điện thoại hoặc máy tính cá nhân Cấu hình, mẫu mã của các thiết bị hay sử dụng như đồng hồ, điện thoại, máy tính cá nhân v.v Ảnh chụp màn hình của bất cứ ứng dụng nào có thể chứa thông tin cá nhân, hoặc ứng dụng được chính phủ phát hành như VNeID, BlueZone v.v Địa chỉ IP được nhà mạng cung cấp Thông tin có thể sử dụng để trả lời các câu hỏi bảo mật phổ biến, như tên thành phố được sinh ra, tên thú cưng đầu tiên, tên của giáo viên đầu tiên v.v Thông tin nhận dạng sinh trắc học như dấu vân tay, khuôn mặt, giọng nói Những thông tin có thể dùng để nhận dạng cá nhân như dây chuyền, kiểu tóc, hình xăm Số tài khoản ngân hàng, số tài khoản thẻ tín dụng, ngày hết hạn và mã bảo mật Biệt danh sử dụng chính trong công việc, giao tiếp, bao gồm tên khác với tên thật Địa chỉ email chính, số điện thoại chính chủ Giới tính, chủng tộc, xu hướng tình dục Mã ZIP, Thành Phố, Quốc gia cư trú Mật khẩu, tên người dùng thường được sử dụng Hồ sơ trên các trang mạng xã hội thường được sử dụng ","date":"2023-12-06","objectID":"/vn/baovechinhbanthan/:1:0","tags":["Protect","Prevent","Avoid"],"title":"Bảo vệ chính bản thân bạn","uri":"/vn/baovechinhbanthan/"},{"categories":["Internet"],"content":"Quy tắc chia sẻ và sử dụng thông tin trên mạng Sử dụng ít nhất 3 địa chỉ email khác nhau dành cho các mục đích khác nhau. Ví dụ: Một địa chỉ email được sử dụng để xác minh các dịch vụ không thiết yếu như trò chơi, giải trí Một địa chỉ email được sử dụng để đăng kí các dịch vụ thiết yếu như ngân hàng, dịch vụ công Một địa chỉ email để giao tiếp Khuyến nghị như sau: Sử dụng các dịch vụ email được mã hoá và có mật mã bảo vệ hộp thư riêng sử dụng cho giao tiếp và đăng kí các dịch vụ thiết yếu. Khi sử dụng những dịch vụ email này thì kể cả cơ quan thực thi pháp luật ép buộc giao nộp thông tin thì cũng không thể đọc được những email bên trong. Khuyến nghị sử dụng ProtonMail Sử dụng tên miền riêng và sử dụng các dịch vụ chuyển tiếp email để đăng kí xác minh các dịch vụ không thiết yếu. Khuyến nghị sử dụng các tên miền cấp một không có máy chủ Whois như .to, .si, .al và sử dụng dịch vụ chuyển tiếp email CloudFlare Email Routing Không sử dụng cùng một mật khẩu cho nhiều dịch vụ, không sử dụng các trình quản lý mật khẩu trực tuyến. Khuyến nghị như sau: Sử dụng các trình tạo mật khẩu ngẫu nhiên, nên sử dụng trình tạo mật khẩu sau: ấn vào đây Lưu trữ mật khẩu trong một thiết bị cứng được mã hoá, khuyến nghị các sản phẩm của: OnlyKey Lưu trữ mật khẩu trong một tệp được mã hoá. Có thể sử dụng bất kì công cụ mã hoá nào mà bạn coi là an toàn. Sử dụng xác thực hai lớp cho tất cả các dịch vụ. Không sử dụng ứng dụng xác thực hai lớp có thể sao lưu trực tuyến. Khuyến nghị như sau: Lưu trữ mã xác thực hai lớp trên các thiết bị cứng được mã hoá, khuyến nghị các sản phẩm của: Yubico Sử dụng ứng dụng xác thực hai lớp mã nguồn mở và không cần đăng nhập, không thể sao lưu trực tuyến, khuyến nghị sử dụng Google Authenticator, đường dẫn tải xuống: Android / iOS Sử dụng các hệ điều hành mã nguồn mở. Ví dụ như Android cho các thiết bị di động và Linux cho các thiết bị máy tính. Không đăng nhập và sử dụng các dịch vụ của các công ty công nghệ lớn như Google, Facebook khi chưa thực hiện các biện pháp cách ly thông tin. Đặc biệt không đăng nhập tài khoản Google nếu sử dụng các thiết bị Android. Sử dụng các ứng dụng VPN để ẩn địa chỉ IP. Lưu ý sử dụng các dịch vụ VPN nhiều người sử dụng để có hiệu quả nhất, nếu không các cơ quan thực thi pháp luật vẫn có thể lần ra địa chỉ IP thực của bạn. Khuyến nghị sử dụng các dịch vụ VPN có thể thanh toán bằng tiền điện tử không thể lần dấu vết như Monero và không cần đăng kí tài khoản như Mullvad VPN hoặc iVPN. Không sử dụng cùng một biệt danh/tên đăng nhập cho nhiều dịch vụ khác nhau. Sử dụng các biệt danh khác nhau cho các loại dịch vụ khác nhau. Ví dụ: biệt danh sử dụng cho trò chơi, biệt danh sử dụng cho mạng xã hội, biệt danh sử dụng cho diễn đàn. Sử dụng các trình tạo chuỗi kí tự ngẫu nhiên, ví dụ như Random.org String Generator Xoá các dữ liệu có thể nhận dạng trong các tệp có thể chia sẻ, đặc biệt là tệp hình ảnh thường chứa dữ liệu EXIF bao gồm vị trí, tên thiết bị, thời gian chụp. Khuyến nghị sử dụng các chương trình xoá EXIF ngoại tuyến và mã nguồn mở như EXIF Cleaner Sử dụng các trình duyệt tập trung vào bảo mật, không sử dụng trình duyệt ở chế độ toàn màn hình. Khuyến nghị sử dụng trình duyệt FireFox Không sử dụng viết tắt/từ lóng. Văn phong cũng có thể là thứ để nhận dạng bạn. Sử dụng sim rác và hòm thư thoại để giao tiếp nếu cần. Thiết bị nên được đặt ở một nơi ngẫu nhiên khác với thành phố bạn sinh sống, ví dụ như một cột điện ngẫu nhiên nào đó. Sử dụng các ứng dụng đồng bộ hoá để truy cập thông tin. Hầu hết các nhà mạng đều cung cấp chức năng nạp tiền trực tuyến nên có thể duy trì thiết bị trong một thời gian dài. ","date":"2023-12-06","objectID":"/vn/baovechinhbanthan/:2:0","tags":["Protect","Prevent","Avoid"],"title":"Bảo vệ chính bản thân bạn","uri":"/vn/baovechinhbanthan/"},{"categories":["mật mã"],"content":"Bài viết  hiển thị các kiến thức cơ bản về ATTT.","date":"2023-11-18","objectID":"/vn/gioithieuattt/","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"Mục tiêu và nguyên tắc chung Đảm bảo tính mật (Confidentiality) Đảm bảo tài sản không bị truy cập trái phép bởi những người không có thẩm quyền Đảm bảo tính nguyên vẹn (Integrity) Đảm bảo tài sản không thể bị sửa đổi, làm giả bởi những người không có thẩm quyền Tính nguyên vẹn của dữ liệu (Data integrity) Tính nguyên vẹn của chủ thể (Origin integrity) Tính khả dụng (Availability) Đảm bảo tài sản là sẵn sàng để đáp ứng cho người có thẩm quyền Thế nào là Crypto ? Xây dựng và phân tích các giao thực mật mã để đạt được các mục tiêu về an toàn thông tin Một giao thức (hoặc một cơ chế) là một bộ các thủ tục cho biết các bên tham gia cần phải làm những gì Các nhà mật mã học phân tích các giao thức dưới các mô hình tấn công Giả sử khả năng và các hành động có thể của kẻ tấn công Chúng ta cần đứng trên vai trò của kẻ tấn công để suy nghĩ Các thuật ngữ Ngành Mật mã (cryptology) thường được quan niệm như sự kết hợp của hai lĩnh vực con: Phá giải mã (cryptanalysis): nghiên cứu các kỹ thuật toán học phục vụ phân tích phá mật mã và/hoặc tạo ra các đoạn mã giản nhằm đánh lừa bên nhận tin. Sinh, chế mã mật (cryptography): nghiên cứu các kỹ thuật toán học nhằm cung cấp các công cụ hay dịch vụ đảm bảo an toàn thông tin. Hai lĩnh vực con này tồn tại như hai mặt đối lập, “đấu tranh để cùng phát triển” của một thể thống nhất là ngành khoa học mật mã (cryptology). Tuy nhiên, do lĩnh vực thứ hai (cryptanalysis) ít được phổ biến quảng đại nên dần dần, cách hiểu chung hiện nay là đánh đồng hai thuật ngữ cryptography và cryptology. Theo thói quen chung này, hai thuật ngữ này có thể dùng thay thế nhau. Thậm chí cryptography là thuật ngữ ưa dùng, phổ biến trong mọi sách vở phổ biến khoa học, còn cryptology thì xuất hiện trong một phạm vi hẹp của các nhà nghiên cứu học thuật thuần túy. Plaintexts: bản rõ Ciphertexts: bản mã Keys: khoá Encryption: mã hoá Decryption: giải mã Hệ thống mã hóa \\(P\\) là tập hữu hạn các bản rõ (PlainText), nó được gọi là không gian bản rõ chứa bản tin gốc ban đầu. \\(C\\) là tập hợp hữu hạn bản mã (Crypto), nó còn được gọi là không gian các bản mã. Một phần tử của \\(C\\) có thể nhận được bằng cách áp dụng phép mã hóa \\(E_K\\) lên một phần tử P, với \\(k \\in K\\). \\(K\\) là tập hữu hạn các khoá hay còn gọi là không gian khoá. Đối với mỗi phần tử k của K được gọi là một khoá (Key). Số lượng của không gian khoá phải đủ lớn để “kẻ địch” không có đủ thời gian thử mọi khoá có thể (phương pháp vét cạn). Là bộ năm $\\mathbb{P}, \\mathbb{C}, \\mathbb{K}, \\mathbb{E}, \\mathbb{D}$ thỏa mãn các điều kiện sau: Tập nguồn $ \\mathbb{P} $ là tập hữu hạn các mẩu tin nguồn cần mã hóa có thể có Tập đích $ \\mathbb{C} $ là tập hữu hạn các mẩu tin có thể có sau khi mã hóa Tập khóa $ \\mathbb{K} $ là tập hữu hạn các khóa có thể được sử dụng Tập $ \\mathbb{E} $ và $ \\mathbb{D} $ là tập luật mã hóa và giải mã. $ \\forall k \\in \\mathbb{K}: \\exists e_k \\in \\mathbb{E}, \\exists d_k \\in \\mathbb{D}$ sao cho: Luật mã hóa: $e_k: \\mathbb{P} \\rightarrow \\mathbb{C}$ Luật giải mã: $d_k: \\mathbb{C} \\rightarrow \\mathbb{P}$ 2 luật này thỏa mãn $d_k(e_k(x)) = x, \\forall x \\in \\mathbb{P}$ Bảo đảm mẩu tin $x$ được mã hóa bằng luật $e_k$ có thể được giải mã bằng luật $d_k$ Mật mã khoá bí mật: Secret-key cryptography Còn có tên là: mật mã khoá đối xứng – symmetric cryptography Quá trình mã hoá và giải mã dùng cùng một khoá (Z=Z’) $\\Rightarrow$ mật mã khoá đối xứng Khoá cần phải giữ bí mật $\\Rightarrow$ mật mã khoá bí mật Vấn đề phân phối khoá: làm sao để chia sẻ khoá giữa A và B Mật mã khoá công khai: Public-key cryptography Còn gọi là: mật mã khoá phi đối xứng – asymmetric cryptography Khoá dùng để mã hoá và giải mã là khác nhau Không thể suy ra khoá giải mã từ khoá dùng để mã hoá và ngược lại Tốn chi phí hơn khoá đối xứng ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:0:0","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"So sánh hệ mã đối xứng và bất đối xứng Nội dung Mã hóa đối xứng Mã hóa bất đối xứng Tốc độ Nhanh Chậm Chiều dài khóa Ngắn Dài Trao đổi mã khóa Khó Dễ Tên gọi khóa Secret key Public-private key ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:1:0","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"Làm sao để ta có thể đánh giá được tính an toàn, hay tính bảo mật của mỗi một hệ mã đặt ra? Một hệ mã mật là không an toàn (insecure) Bằng việc chỉ ra cách phá nó trong một mô hình tấn công (các mục tiêu về ATBM (security) không được đảm bảo đúng) Để có thể khẳng định tính an toàn cao Đưa ra một chứng minh hình thức (formal proof) Chứng minh bằng công cụ toán học là tính ATBM của hệ mã đang xét là tương đương với một hệ mã kinh điển, mà tính an toàn của nó đã khẳng định rộng rãi từ lâu. Phá mã Có rất nhiều kiểu tấn công, phụ thuộc vào: Kiểu thông tin mà kẻ tấn công có thể có Tương tác với máy mã hoá Năng lực tính toán của kẻ tấn công Tấn công chỉ dựa vào bản mã (Ciphertext-only attack): Kẻ tấn công chỉ biết bản mã Mục tiêu: tìm được bản rõ và khoá Chú ý: một hệ thống bị tấn công bởi kiểu tấn công này thì hoàn toàn không an toàn Tấn công dựa vào bản rõ (Known-plaintext attack): Kẻ tấn công biết một vài bản mã và các bản rõ tương ứng Mục tiêu: tìm ra khoá đã được dùng để mã hoá Hoặc tìm ra cách để giải mã các gói tin dùng cùng khoá với các gói tin đã bắt được Tấn công bản rõ có chọn lựa (Chosen-plaintext attack) Kẻ tấn công có thể chọn một số các bản rõ và nhận được các bản mã tương ứng Mục tiêu: suy đoán khoá Tấn công bản mã có chọn lựa (Chosen-ciphertext attack) Tương tự như trên nhưng kẻ tân công có thể chọn một vài bản mã và nhận được các bản rõ tương ứng. Sự lựa chọn của bản mã có thể thay đổi tuỳ vào bản rõ nhận được trước đó. Mô hình đánh giá mức độ bảo mật Bảo mật vô điều kiện (unconditional security): Đây là mô hình đánh giá ATBM mức cao nhất, trong đó “vô điều kiện” được hiểu theo ý nghĩa của lý thuyết thông tin (information theory), trong đó các ý niệm về “lượng tin” được hình thức hóa thông qua các phép toán xác suất. Trong mô hình này, kẻ địch được coi là không bị hạn chế về năng lực tính toán, tức là có thể thực hiện bất kỳ khối lượng tính toán cực lớn nào đặt ra trong khoảng thời gian ngắn bất kỳ. Mặc dù có năng lực tính toán siêu nhiên như vậy, mô hình này chỉ giả thiết kẻ tấn công là người ngoài hoàn toàn (tức là ứng với mô hình tấn công chỉ–biết–bản–mã). Một hệ mật mã đạt được mức an toàn vô điều kiện, tức là có thể đứng vững trước sức mạnh của một kẻ địch bên ngoài (chỉ biết bản mã) có khả năng không hạn chế tính toán, được gọi là đạt đến bí mật tuyệt đối (perfect secretcy). Bảo mật chứng minh được (provable security): Đây cũng là một mô hình đánh giá mức rất cao, lý tưởng trong hầu hết các trường hợp. Một hệ mật mã đạt được mức đánh giá này đối với một mô hình tấn công cụ thể nào đó, nếu ta có thể chứng minh bằng toán học rằng tính an toàn của hệ mật là được quy về tính NP–khó của một bài toán nào đó đã được biết từ lâu (ví dụ bài toán phân tích ra thừa số nguyên tố, bài toán cái túi, bài toán tính logarit rời rạc…). Nói cách khác, ta phải chứng minh được là kẻ thù muốn phá được hệ mã thì phải thực hiện một khối lượng tính toán tương đương hoặc hơn với việc giải quyết một bài toán NP–khó đã biết. Bảo mật tính toán được, hay bảo mật thực tiễn (computational security hay practical security): Đây là một trong những mức đánh giá thường được áp dụng nhất trong thực tế (khi những mức bảo mật cao hơn được cho là không thể đạt tới). Khi đánh giá ở mức này với một hệ mã cụ thể, người ta lượng hóa khối lượng tính toán đặt ra để có thể phá hệ mã này, sử dụng kiểu tấn công mạnh nhất đã biết (thường kèm theo đó là mô hình tấn công phổ biến mạnh nhất). Từ việc đánh giá được khối lượng tính toán này cùng thời gian thực hiện (với năng lực kẻ địch mạnh nhất có thể trên thực tế), và so sánh với thời gian đòi hỏi đảm bảo tính mật trên thực tế, ta có thể đánh giá hệ mã có đạt an toàn thực tiễn cao hay không. Đôi khi, cơ sở đánh giá cũng dựa vào một bài toán khó nào đó mặc dù không đưa ra được một chứng minh tương đương thực sự. Ví dụ: Giả thiết một hệ mã X được sử dụng mã mật các loại văn bản hợp đồng có giá trị sử dụng trong 2 năm. Nếu như kẻ địch có năng lực tính toán mạnh nhất có thể cũng phải mất thời gian đến 20 năm để phá ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:2:0","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"Tính chất của $\\mathbb{Z}_m$ ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:3:0","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"Phép cộng trong $\\mathbb{Z}_m$ $\\forall a, b \\in \\mathbb{Z}_m: a + b \\in \\mathbb{Z}_m$ Giao hoán: $\\forall a, b \\in \\mathbb{Z}_m: a + b = b + a$ Kết hợp: $\\forall a, b, c \\in \\mathbb{Z}_m: (a + b) + c = a + (b + c)$ Phần tử trung hòa là $0$, $\\forall a \\in \\mathbb{Z}_m: a + 0 = 0 + a = a$ Phần tử đối: $\\forall a, b \\in \\mathbb{Z}_m$ đều có phần tử đối là $(m - a) \\in \\mathbb{Z}_m$ ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:3:1","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["mật mã"],"content":"Phép nhân trong $\\mathbb{Z}_m$ $\\forall a, b \\in \\mathbb{Z}_m: a \\times b \\in \\mathbb{Z}_m$ Giao hoán: $\\forall a, b \\in \\mathbb{Z}_m: a \\times b = b \\times a$ Kết hợp: $\\forall a, b, c \\in \\mathbb{Z}_m: (a \\times b) \\times c = a \\times (b \\times c)$ Phần tử đơn vị là $1$, $\\forall a \\in \\mathbb{Z}_m: a \\times 1 = 1 \\times a = a$ Phân phối phép $\\times$ với phép $+$: $\\forall a, b, c \\in \\mathbb{Z}_m, (a + b) \\times c = a\\times c + b\\times c$ ","date":"2023-11-18","objectID":"/vn/gioithieuattt/:3:2","tags":["IT4010E"],"title":"Các khái niệm chung về an toàn thông tin","uri":"/vn/gioithieuattt/"},{"categories":["Internet"],"content":"This article shows the solution of bypass the firewall Internet in VN.","date":"2023-11-18","objectID":"/vn/bypassisp/","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"This article shows the solution of bypass the firewall Internet in VN. ","date":"2023-11-18","objectID":"/vn/bypassisp/:0:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"Các phương thức được sử dụng để kiểm duyệt mạng Tại Việt Nam, nhà mạng sử dụng 2 phương thức kiểm duyệt mạng chính đó là: Nhiễm độc DNS (DNS Spoofing/DNS Poisoning): Đây là phương pháp phổ biến nhất để kiểm duyệt mạng. Phương pháp này không chỉ phổ biến trong kiểm duyệt mạng trên phạm vi quốc gia mà nó còn phổ biến trong các hộ gia đình/công ty cũng thường xuyên sử dụng phương pháp này để ngăn chặn người dùng cơ bản truy cập các trang web quản trị viên không mong muốn. Nhưng phương pháp này không hiệu quả nếu người dùng đã biết trước địa chỉ IP của trang web mà họ truy cập, qua đó người dùng có thể truy cập trực tiếp vào trang web mà không cần hỏi DNS về IP của máy chủ đằng sau tên miền. Kiểm tra gói sâu (DPI/Deep Packet Inspection): Đây là phương pháp phổ biến để kiểm duyệt mạng trên phạm vi quốc gia nhưng không phổ biến trong hộ gia đình. Phương pháp này sử dụng các công nghệ kiểm duyệt để kiểm tra sâu rộng các gói mạng được truyền qua phương thức TCP/HTTP qua đó có thể ngăn chặn triệt để việc truy cập các trang web không mong muốn. Phương pháp này vô cùng hiệu quả, bởi vì kể cả khi người dùng biết địa chỉ tên miền/Địa chỉ IP của trang web họ cần truy cập thì kết nối vẫn sẽ không được thực hiện. Giải thích đơn giản: Ví dụ bạn là shipper đang muốn đến nhà chú Việt để giao hàng. Do không biết nhà, bạn hỏi đường bác Nam bán trà đá đầu ngõ nhà bạn Việt. Nhưng do bạn hỏi đường quá to, thằng Kiểm Duyệt ngồi uống trà đá ở đó nghe thấy. Do có tư thù với chú Việt, thằng Kiểm Duyệt chặn họng bác Nam, nói với bạn rằng nhà chú Việt không phải ở trong ngõ này đâu, mà là ở ngõ trên kia kìa. Thế là bạn cảm ơn Kiểm Duyệt rối rít và đưa kiện hàng đến nơi thằng Kiểm Duyệt chỉ mà không biết rằng đó chính là nhà của nó chứ không phải của chú Việt. Trong câu chuyện này, shipper là trình duyệt của bạn, món hàng là truy vấn của bạn, nhà chú Việt là máy chủ của trang web mà bạn muốn truy cập, ngõ nhà chú Việt là Internet, bác Nam là máy chủ DNS không kiểm duyệt, còn thằng Kiểm Duyệt thì y như cái tên, máy chủ DNS đã bị kiểm duyệt và đưa truy vấn của bạn đi sai đường, còn nhà thằng Kiểm Duyệt là máy chủ giả mạo trang web mà bạn muốn truy cập. Theo đó, nếu bạn đã biết nhà chú Việt và không cần hỏi đường thì bạn vẫn có thể giao món hàng thành công. Lần này, bạn vẫn là anh shipper kém may mắn đó. Thằng Kiểm Duyệt giờ đang giữ chức công an phường và vẫn ngồi quán trà đá của bác Nam ở đầu ngõ nhà chú Việt. Rút kinh nghiệm lần trước, bạn đã bảo chú Việt gửi hẳn địa chỉ trên Google Map cho chắc. Nhưng vừa định vô ngõ nhà chú Việt, thằng Kiểm Duyệt chặn bạn lại với lý do đang thực hiện chuyên án buôn bán cần sa ở trong ngõ này và cần kiểm tra mọi món đồ trong giỏ hàng của bạn. Thằng Kiểm Duyệt lục lọi trong giỏ hàng của bạn và phát hiện món đồ có ghi người nhận là chú Việt, thế là nó tịch thu, thậm chí đập nát món đồ đó và đuổi bạn về. Trong câu chuyện này, Kiểm Duyệt đóng vai khác là hệ thống Kiểm tra gói sâu. Nếu chú Việt đặt hàng bằng tên vợ của chú Việt là cô Huyền thì thằng Kiểm Duyệt sẽ không phát hiện ra và cho bạn vào trong ngõ, mặc dù nhà cô Huyền và chú Việt là một. Trong câu chuyện này, cô Huyền là tên miền mới/máy chủ mới của trang web, cung cấp cùng một nội dung của trang web cũ nhưng do thằng Kiểm Duyệt chưa cập nhật thông tin là chú Việt đã lấy vợ nên không biết để kiểm duyệt. ","date":"2023-11-18","objectID":"/vn/bypassisp/:1:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"Cách để vượt qua kiểm duyệt mạng ở Việt Nam Qua hai câu chuyện ngắn ở trên, ta có thể thấy chỉ cần biết địa chỉ chính xác và thay đổi tiêu đề của gói hàng thì gói hàng sẽ có thể đến tay chú Việt một các an toàn mà không bị thằng Kiểm Duyệt chặn. Vậy có những cách nào để vượt qua kiểm duyệt mạng ở Việt Nam? DNS qua HTTPS/TLS: Truy vấn đến máy chủ DNS thông qua phương thức bảo mật HTTPS/TLS cách duy nhất để có thể tránh nhiễm độc DNS (ngoài cách tự xây dựng DNS riêng). Hai DNS mình khuyên các bạn dùng là CloudFlare DNS và AdGuard DNS. Sử dụng phần mềm để đánh lừa hệ thống DPI. Các bạn có thể làm xáo trộn tiêu đề của các gói tin truyền qua Layer 4. Vì DPI đa số chỉ quét 3 lớp trong mô hình OSI, nơi định tuyến các gói mạng nên ta có thể làm cho các gói mạng trông “khác đi” một tí và qua mặt hệ thống này. Có rất nhiều phần mềm mã nguồn mở cung cấp khả năng đánh lừa hệ thống DPI, chi tiết mình sẽ cũng cấp trong mục sau. Sử dụng một đường hầm kết nối, phổ biến nhất là VPN. VPN là mạng riêng ảo, khi bạn kết nối đến một trang web thì nhà mạng sẽ chỉ thấy bạn đang kết nối đến máy chủ VPN. Phương thức hoạt động của VPN là sẽ tạo ra một đường hầm giữa bạn và trang web bạn muốn truy cập để tránh mọi sự kiểm soát của nhà mạng với bạn. Tuy rằng VPN dễ bị đánh chặn, ví dụ như Trung Quốc thường chặn VPN trước các sự kiện chính trị lớn, nhưng do cái quan trọng thực sự của VPN là máy chủ chứ không phải IP nên bỏ qua việc chặn VPN là cực kì dễ dàng. Tuy nhiên, mình khuyên bạn nên tự tạo máy chủ VPN của riêng mình mà không sử dụng bên thứ ba, vì VPN thường để lại các tệp nhật kí nhằm cho việc định tuyến đường hầm trở nên khả thi nên khi bị các cơ quan chức năng tịch thu máy chủ thì thông tin truy cập của bạn vẫn có thể lộ lọt ra ngoài. Tài nguyên ","date":"2023-11-18","objectID":"/vn/bypassisp/:2:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"DNS qua HTTPS CloudFlare: Không có bộ lọc: https://cloudflare-dns.com/dns-query Lọc các trang web mã độc/lừa đảo: https://security.cloudflare-dns.com/dns-query Lọc các trang web mã độc/lừa đảo/khiêu dâm: https://family.cloudflare-dns.com/dns-query AdGuard: Không có bộ lọc: https://unfiltered.adguard-dns.com/dns-query Lọc quảng cáo, trình theo dõi: https://dns.adguard-dns.com/dns-query Lọc quảng cáo, tình theo dõi, trang web khiêu dâm, kết quả tìm kiếm khiêu dâm: https://family.adguard-dns.com/dns-query ","date":"2023-11-18","objectID":"/vn/bypassisp/:3:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"DNS qua TLS CloudFlare: Không có bộ lọc: cloudflare-dns.com Lọc các trang web mã độc/lừa đảo: security.cloudflare-dns.com Lọc các trang web mã độc/lừa đảo/khiêu dâm: family.cloudflare-dns.com AdGuard: Không có bộ lọc: unfiltered.adguard-dns.com Lọc quảng cáo, trình theo dõi: dns.adguard-dns.com Lọc quảng cáo, tình theo dõi, trang web khiêu dâm, kết quả tìm kiếm khiêu dâm: family.adguard-dns.com ","date":"2023-11-18","objectID":"/vn/bypassisp/:4:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"DPI Spoofing Windows: GoodbyeDPI by ValdikSS Linux/MacOS: SpoofDPI by xvzc Android: PowerTunnel by krlvm Windows/Linux/MacOS: PowerTunnel by krlvm ","date":"2023-11-18","objectID":"/vn/bypassisp/:5:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"VPN ","date":"2023-11-18","objectID":"/vn/bypassisp/:6:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"VPN được quản lý VPN được quản lý là các máy chủ VPN được cấu hình sẵn để truy cập. VPN dễ sử dụng: NordVPN (aff). NordVPN là một VPN dễ sử dụng, đăng nhập và sử dụng qua tài khoản NordVPN nên dễ dàng quản lý. NordVPN có các IP với độ tin cậy cao nhằm tránh bị liệt vào Blacklist. NordVPN cũng có các máy chủ VPN để có thể xem các nội dung bị cấm theo địa lý trên Netflix, Spotify, Hulu, v.v VPN không có tài khoản: Mullvad VPN: Mullvad VPN là một VPN được quản lý, không có tài khoản, không có nhật kí, không có lời hứa sặc mùi quảng cáo. Mullvad VPN đơn giản là VPN và quyền riêng tư. IVPN: IVPN cũng giống như Mullvad, là một VPN được quản lý không có tài khoản, không có nhật ký. ","date":"2023-11-18","objectID":"/vn/bypassisp/:6:1","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"VPN miễn phí LƯU Ý QUAN TRỌNG: KHÔNG BAO GIỜ TIN TƯỞNG BẤT CỨ DỊCH VỤ VPN MIỄN PHÍ NÀO NGOÀI 2 DỊCH VỤ ĐƯỢC LIỆT KÊ Ở DƯỚI ĐÂY. VIỆC SỬ DỤNG VPN MIỄN PHÍ ĐEM LẠI RỦI RO CỰC KÌ CAO. NHÀ CUNG CẤP VPN MIỄN PHÍ CÓ THỂ BÁN THÔNG TIN CỦA BẠN, NGUY HIỂM HƠN CHÚNG CÓ THỂ LÀ HONEYPOT, BIẾN THIẾT BỊ CỦA BẠN THÀNH CÔNG CỤ KHAI THÁC, TẤN CÔNG! Hai VPN miễn phí duy nhất được mình khuyến nghị là: CloudFlare Warp: Một VPN miễn phí của CloudFlare, không thực sự bảo vệ bạn hoàn toàn nhưng có thể giúp bạn truy cập các trang web bị nhà mạng cấm một cách dễ dàng. Proton VPN: Một VPN MIỄN PHÍ DUY NHẤT TRÊN THẾ GIỚI CỦA CÔNG TY LỚN thực sự bảo mật. VPN không có nhật kí, trụ sở công ty được đặt ở quốc gia đặt quyền riêng tư trên hàng đầu. Có các máy chủ đặt ở căn cứ quân sự cũ được Proton mua lại (chỉ máy chủ Secure Core ở gói trả phí). ","date":"2023-11-18","objectID":"/vn/bypassisp/:6:2","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"VPN không được quản lý VPN không được quản lý, hay còn gọi là tự quản lý là máy chủ VPN do chính bạn tạo ra. Đặc điểm của loại VPN này là bạn an toàn tuyệt đối, vì máy chủ VPN thuộc sở hữu của bạn. Nhà cung cấp máy chủ được tin cậy là: BuyVM Đây là nhà cung cấp duy nhất mình tin cậy. BuyVM cung cấp máy chủ ở các vị trí chống kiểm soát luật mạnh mẽ. BuyVM chấp nhận các phương thức thanh toán bằng tiền ảo nên có thể xóa dấu vết dễ dàng hơn. Ngoài ra, giá server ở đây CỰC KÌ RẺ, phù hợp để làm máy chủ VPN mà không phải chi quá nhiều tiền. Script cài đặt máy chủ VPN riêng tư nhanh OpenVPN Install OpenVPN Connect ","date":"2023-11-18","objectID":"/vn/bypassisp/:6:3","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["Internet"],"content":"Tham khảo bài viết khác về cách bảo mật thông tin trên mạng OPSEC Guilde by NDBIAW ","date":"2023-11-18","objectID":"/vn/bypassisp/:7:0","tags":["DNS","ISP","DPI"],"title":"Cách vượt qua tường lửa kiểm duyệt Internet ở Việt Nam","uri":"/vn/bypassisp/"},{"categories":["mật mã"],"content":"This article shows the concept of Cryptography and Security.","date":"2023-11-18","objectID":"/vn/cryptoi/","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"This article shows the concept of Cryptography and Security. Mật mã khối DES ","date":"2023-11-18","objectID":"/vn/cryptoi/:0:0","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"1. Một số hệ mật mã cổ điển ","date":"2023-11-18","objectID":"/vn/cryptoi/:1:0","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"1.1 Mã dịch shift cipher (mã cộng additive cipher) Không gian khóa : [1…25] Mẫ hóa với khóa K cho trước: Mỗi ký tự của bản rõ P được mã hóa thành ký tự thứ k sau nó (dịch đi K bước về phía bên phải) Cách định nghĩa khác: \\(Y = X \\oplus K \\Rightarrow\\) mã cộng Giải mã với khóa K cho trước Dịch trái A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Y = (X + K) mod 26 X = (Y - K) mod 26 P = CRYPTOGRAPHYISFUN K = 11 C = NCJAVZRCLASJTDQFY Ví dụ Tìm rõ những bản mã sau: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Djqifs jt csplfo Cipher is broken Mã dịch: phá mã Duyệt toàn bộ Không gian khoá nhỏ (\u003c= 26 khoá). Tìm được K \\(\\Rightarrow\\) giải mã dễ dàng ","date":"2023-11-18","objectID":"/vn/cryptoi/:1:1","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"1.2 Mật mã bảng thay thế (Monoalphabetic cipher) Không gian khoá: Toàn bộ hoán vị của bảng chữ cái \\(\\sum = {A, B, C, …, Z}\\) Mã khóa với khóa \\(\\pi\\) cho trước: Mỗi ký tự X trong bản rõ P được thay thế bởi ký tự \\(\\pi(X)\\) tương ứng trong hoán vị \\(\\pi\\) Giải mã với khóa \\(\\pi\\) cho trước: Mỗi ký tự Y trong bản mã C được thay thế bởi ký tự \\(\\pi^{-1}(X)\\) tương ứng trong hoán vị \\(\\pi^{-1}\\) Example: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\r\\(\\pi\\) = B A D C Z H W Y G O Q X S V T R N M S K J I P F E U BECAUSE \\(\\Rightarrow\\) AZDBJSZ Có vẻ an toàn Phương pháp duyệt toàn bộ là bất khả thi Không gian khóa lớn: \\(26! \\approx 4.10^26\\) Được sử dụng phổ biến ở thiên niên kỷ thứ nhất trước công nguyên Đã từng được cho là không thể phá được Trong thời kỳ thiên nhiên kỷ đầu tiên (trước năm 1000), mật mã một bảng thế được coi là không thể phá được. Tuy nhiên sau đó, các nhà nghiên cứu thời đó đã dần dần tìm ra phương pháp phá giải tốt hơn việc thử vét cạn không gian khóa; phương pháp này dựa trên những quan sát mang tính thống kê, chẳng hạn về sự xuất hiện không đồng đều của các chữ cái trong ngôn ngữ tự nhiên. ","date":"2023-11-18","objectID":"/vn/cryptoi/:1:2","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"Phá mã một bảng thế Ví dụ: Bản mã: uxwk lakkvma xvk naac vuuvbdap vcp uxwk wk kwliya Biết số các ký t các ký tự trong b trong bản rõ là: a: 5, b:1, c:1 d:2, e:6, g:1, h:3, i:4, k:1, l:1, m:2, n:2, p:1, s:7, t:4, các ký tự còn lại không xuất hiện Hãy tìm bản rõ ? ","date":"2023-11-18","objectID":"/vn/cryptoi/:1:3","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"Phá mã một bảng thế: phân tích tần số xuất hiện của các ký tự Mỗi ngôn ngữ đều có đặc trưng: Tần số xuất hiện của các ký tự, của một nhóm 2 hay nhiều ký tự. Mã thế duy trì đặc trưng trên \\(\\Rightarrow\\) có nguy cơ bị tấn công bằng cách phân tích tần số xuất hiện của các ký tự ","date":"2023-11-18","objectID":"/vn/cryptoi/:1:4","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["mật mã"],"content":"Mã thế: phá mã","date":"2023-11-18","objectID":"/vn/cryptoi/:1:5","tags":["IT4010E"],"title":"Cơ sở mật mã học","uri":"/vn/cryptoi/"},{"categories":["code"],"content":"This article shows the concept of Pointer and how it works.","date":"2023-11-11","objectID":"/vn/pointerp1/","tags":["Pointer","C"],"title":"Giải ngố Pointer (Phần 1)","uri":"/vn/pointerp1/"},{"categories":["code"],"content":"This article shows the concept of Pointer and how it works P1. Một trong những điều mà người mới bắt đầu học C cảm thấy khó khăn là khái niệm về con trỏ. Mục đích của hướng dẫn này là giới thiệu về con trỏ và cách sử dụng chúng cho những người mới bắt đầu. Tôi nhận thấy rằng lý do chính khiến những người mới bắt đầu gặp vấn đề với con trỏ là họ có cảm giác yếu hoặc rất ít về các biến, (vì chúng được sử dụng trong C). Vì vậy, chúng ta bắt đầu bằng việc thảo luận về các biến C nói chung. Biến trong chương trình là một cái gì đó có tên và giá trị của nó có thể khác nhau. Cách trình biên dịch và trình liên kết xử lý việc này là nó gán một khối bộ nhớ cụ thể trong máy tính để giữ giá trị của biến đó. Kích thước của khối đó phụ thuộc vào phạm vi mà biến được phép thay đổi. Ví dụ: trên PC 32 bit, kích thước của biến số nguyên là 4 byte. Trên các số nguyên PC 16 bit cũ hơn là 2 byte. Trong C, kích thước của loại biến chẳng hạn như số nguyên không nhất thiết phải giống nhau trên tất cả các loại máy. Hơn nữa, có nhiều loại biến số nguyên trong C. Chúng ta có số nguyên, số nguyên dài và số nguyên ngắn mà bạn có thể đọc trong bất kỳ văn bản cơ bản nào về C. Tài liệu này giả định việc sử dụng hệ thống 32 bit với số nguyên 4 byte . Nếu bạn muốn biết kích thước của các loại số nguyên khác nhau trên hệ thống của mình, việc chạy đoạn mã sau sẽ cung cấp cho bạn thông tin đó. #include \u003cstdio.h\u003e int main() { printf(\"size of a short is %d\\\\n\", sizeof(short)); printf(\"size of a int is %d\\\\n\", sizeof(int)); printf(\"size of a long is %d\\\\n\", sizeof(long)); } Khi khai báo một biến, chúng ta thông báo cho trình biên dịch hai thông tin: tên biến và loại biến. Ví dụ: chúng ta khai báo một biến kiểu số nguyên có tên k bằng cách viết: int k; Khi nhìn thấy phần “int” của câu lệnh này, trình biên dịch sẽ dành 4 byte bộ nhớ (trên PC) để giữ giá trị của số nguyên. Nó cũng thiết lập một bảng ký hiệu. Trong bảng đó, nó thêm ký hiệu k và địa chỉ tương đối trong bộ nhớ nơi 4 byte đó được đặt sang một bên. Vì vậy, sau này nếu chúng ta viết: k = 2; chúng ta hy vọng rằng, tại thời điểm chạy khi câu lệnh này được thực thi, giá trị 2 sẽ được đặt ở vị trí bộ nhớ dành riêng cho việc lưu trữ giá trị của k. Trong C, chúng ta gọi một biến như số nguyên k là một “đối tượng”. Theo một nghĩa nào đó, có hai “giá trị” gắn liền với đối tượng k. Một là giá trị của số nguyên được lưu trữ ở đó (2 trong ví dụ trên) và cái còn lại là “giá trị” của vị trí bộ nhớ, tức là địa chỉ của k. Một số văn bản đề cập đến hai giá trị này bằng danh pháp rvalue (right value, phát âm là “are value”) và lvalue (left value, phát âm là “el value”) tương ứng. Trong một số ngôn ngữ, lvalue là giá trị được phép ở phía bên trái của toán tử gán ‘=’ (tức là địa chỉ nơi kết quả đánh giá của phía bên phải kết thúc). Giá trị là giá trị nằm ở bên phải của câu lệnh gán, 2 ở trên. Giá trị không thể được sử dụng ở phía bên trái của câu lệnh gán. Như vậy: 2 = k; Là bất hợp pháp. Trên thực tế, định nghĩa “lvalue” ở trên đã được sửa đổi phần nào cho C. Theo K\u0026R II (trang 197): [1] “An object is a named region of storage; an lvalue is an expression referring to an object.” Tuy nhiên, tại thời điểm này, định nghĩa được trích dẫn ban đầu ở trên là đủ. Khi chúng ta trở nên quen thuộc hơn với con trỏ, chúng ta sẽ đi sâu vào chi tiết hơn về điều này. Được rồi, bây giờ hãy xem xét: int j, k; k = 2; j = 7; \u003c-- line 1 k = j; \u003c-- line 2 Ở phần trên, trình biên dịch diễn giải j ở dòng 1 là địa chỉ của biến j (giá trị lvalue) và tạo mã để sao chép giá trị 7 vào địa chỉ đó. Tuy nhiên, ở dòng 2, j được hiểu là giá trị của nó (vì nó nằm ở phía bên phải của toán tử gán ‘=’). Nghĩa là, ở đây j đề cập đến giá trị được lưu tại vị trí bộ nhớ dành riêng cho j, trong trường hợp này là 7. Vì vậy, số 7 được sao chép vào địa chỉ được chỉ định bởi lvalue của k. Trong tất cả các ví dụ này, chúng tôi đang sử dụng số nguyên 4 byte nên tất cả việc sao chép giá trị từ vị trí lưu trữ này sang vị trí lưu trữ khác đều được thực hiện bằng cách sao chép ","date":"2023-11-11","objectID":"/vn/pointerp1/:0:0","tags":["Pointer","C"],"title":"Giải ngố Pointer (Phần 1)","uri":"/vn/pointerp1/"},{"categories":["code"],"content":"References for Chapter 1: “The C Programming Language” 2nd Edition B. Kernighan and D. Ritchie Prentice Hall ISBN 0-13-110362-8 https://stackoverflow.com/questions/4318881/in-c-what-does-a-variable-declaration-with-two-asterisks-mean https://beginnersbook.com/2014/01/c-pointer-to-pointer/ ","date":"2023-11-11","objectID":"/vn/pointerp1/:0:1","tags":["Pointer","C"],"title":"Giải ngố Pointer (Phần 1)","uri":"/vn/pointerp1/"},{"categories":["code"],"content":"This article shows the concept of Pointer and how it works.","date":"2023-11-11","objectID":"/vn/pointerp2/","tags":["Pointer","C"],"title":"Giải ngố Pointer (Phần 2)","uri":"/vn/pointerp2/"},{"categories":["code"],"content":"This article shows the concept of Pointer and how it works P2. Mục đích của việc xác định loại biến mà một con trỏ trỏ tới là gì? int *ptr; Một trong những lý do đó là, khi ptr “trỏ” tới một số nguyên, nếu chúng ta viết: *ptr = 2; trình biên dịch biết cần sao chép bao nhiêu byte vào vị trí bộ nhớ được trỏ bởi con trỏ ptr. Nếu ptr được khai báo để trỏ tới một số nguyên, 4 byte sẽ được sao chép. Tương tự cho các kiểu số thực như floats và doubles, số byte tương ứng sẽ được sao chép. Tuy nhiên, việc xác định loại mà con trỏ trỏ tới còn cho phép trình biên dịch hiểu mã một cách thú vị hơn. Ví dụ, giả sử chúng ta có một khối trong bộ nhớ gồm mười số nguyên liên tiếp nhau. Tức là, 40 byte bộ nhớ được dành để chứa 10 số nguyên. Bây giờ, giả sử con trỏ nguyên ptr của chúng ta trỏ tới số nguyên đầu tiên này. Ngoài ra, giả sử số nguyên đó nằm ở vị trí bộ nhớ 100 (decimal). Điều gì xảy ra khi chúng ta viết: ptr + 1; Bởi vì trình biên dịch “biết” rằng đây là một con trỏ (tức giá trị của nó là một địa chỉ) và rằng nó trỏ tới một số nguyên (địa chỉ hiện tại của nó, 100, là địa chỉ của một số nguyên), nó sẽ thêm 4 vào ptr thay vì 1, để con trỏ “trỏ tới” số nguyên kế tiếp, tại vị trí bộ nhớ 104. Tương tự, nếu ptr được khai báo là một con trỏ tới kiểu short, nó sẽ thêm 2 vào thay vì 1. Cùng như vậy, với các kiểu dữ liệu khác như floats, doubles, hoặc cả kiểu dữ liệu được người dùng xác định như cấu trúc, cách thức này vẫn áp dụng. Điều này rõ ràng không phải là loại “cộng” mà chúng ta thường nghĩ đến. Trong ngôn ngữ C, nó được gọi là “cộng pointer” (pointer arithmetic), một thuật ngữ chúng ta sẽ quay lại sau này. Tương tự, vì ++ptr và ptr++ đều tương đương với ptr + 1 (tuy nhiên điểm trong chương trình mà ptr được tăng có thể khác nhau), việc tăng một con trỏ bằng toán tử ++, cả tiền tố và hậu tố, sẽ tăng địa chỉ mà nó lưu trữ một lượng bằng sizeof(type), trong đó “type” là loại đối tượng được trỏ tới (tức 4 byte cho một số nguyên). Vì một khối gồm 10 số nguyên nằm liên tiếp nhau trong bộ nhớ, theo định nghĩa, là một mảng các số nguyên, điều này mang lại mối quan hệ thú vị giữa mảng và con trỏ. Xét ví dụ sau: int my_array[] = {1,23,17,4,-5,100}; Ở đây, chúng ta có một mảng chứa 6 số nguyên. Chúng ta truy cập từng số nguyên trong mảng này thông qua chỉ mục của mảng my_array, i.e. sử dụng my_array[0] đến my_array[5]. Nhưng, chúng ta cũng có thể truy cập vào chúng bằng con trỏ như sau: int *ptr; ptr = \u0026my_array[0]; /* point our pointer at the first integer in our array */ Sau đó, chúng ta có thể in ra mảng của chúng ta bằng cách sử dụng notation của mảng hoặc bằng cách gián tiếp thông qua con trỏ. Đoạn code sau minh họa điều này: ----------- Program 2.1 ----------------------------------- /* Program 2.1 from PTRTUT10.HTM 6/13/97 */ #include \u003cstdio.h\u003e int my_array[] = {1,23,17,4,-5,100}; int *ptr; int main(void) { int i; ptr = \u0026my_array[0]; /* point our pointer to the first element of the array */ printf(\"\\n\\n\"); for (i = 0; i \u003c 6; i++) { printf(\"my_array[%d] = %d \",i,my_array[i]); /*\u003c-- A */ printf(\"ptr + %d = %d\\n\",i, *(ptr + i)); /*\u003c-- B */ } return 0; } Hãy biên dịch và chạy chương trình trên và lưu ý kỹ dòng A và B và rằng chương trình in ra các giá trị giống nhau trong cả hai trường hợp. Cũng lưu ý cách chúng ta giải tham chiếu con trỏ trong dòng B, tức là chúng ta đã thêm i vào nó trước khi giải tham chiếu con trỏ mới. Thay đổi dòng B thành: printf(\"ptr + %d = %d\\n\",i, *ptr++); và chạy lại… sau đó thay đổi thành: printf(\"ptr + %d = %d\\n\",i, *(++ptr)); và chạy một lần nữa. Mỗi lần hãy cố gắng dự đoán kết quả và xem kỹ kết quả thực tế. Trong ngôn ngữ C, tiêu chuẩn quy định rằng bất kỳ nơi nào chúng ta có thể sử dụng \u0026var_name[0] thì chúng ta có thể thay thế bằng var_name. ptr = \u0026my_array[0]; chúng ta có thể viết: ptr = my_array; để đạt được cùng một kết quả. Điều này khiến nhiều tài liệu khẳng định rằng tên của một mảng là một con trỏ. Tôi thích nghĩ về nó như “tên của mảng là địa chỉ của phần tử đầu tiên trong mảng”. Nhiều người mới học (bao","date":"2023-11-11","objectID":"/vn/pointerp2/:0:0","tags":["Pointer","C"],"title":"Giải ngố Pointer (Phần 2)","uri":"/vn/pointerp2/"},{"categories":["Đời"],"content":"This article shows the my feeling after bad mood.","date":"2023-11-05","objectID":"/vn/20milestone/","tags":["Thổ Lộ","Đời"],"title":"Chênh vênh giữa tuổi 20 (phần 1)","uri":"/vn/20milestone/"},{"categories":["Đời"],"content":"This article shows the my feeling after bad mood. 1 . Tiểu sử Dạo gần đây tôi cảm thấy khá bế tắc trong học tập cũng như trong cuộc sống. Sau buổi phỏng vấn (thực ra đúng hơn là nói chuyện và tâm sự, chứ nếu hỏi về chuyên môn thì kiến thức của mình gần như bằng 0) với các anh ở một công ty mà tôi xin phép được giấu tên (công ty này là một công ty đứng đằng sau các công nghệ mà các bank (ngân hàng) ở Việt Nam cũng như một số bank giáp Việt Nam đang sử dụng dịch vụ) để bảo đảm danh tính thậm chí là công việc của chính bản thân mình, thì tôi vừa mới có một con đường để đi tiếp (thật ra cũng chẳng mới mẻ gì), đó là vẫn tiếp tục học và trau dồi thật nhiều kiến thức và kĩ năng chuyên môn về an toàn thông tin cũng như trau dồi kĩ năng ngoại ngữ cũng như kĩ năng mềm, nâng cao thể chất của bản thân. 2. Giới thiệu Dạo gần đây chắc mọi người cũng biết do tình hình kinh tế thế giới đang gặp khó khăn, giá cả vật chất leo thang đỉnh điểm, cũng như một loạt làn sóng sa thải nhân sự ở các công ty công nghệ lớn trên thế giới như Google, Facebook, Microsoft, OpenAI,… và tình hình trong nước ở Việt Nam cũng không phải ngoại lệ. Tất nhiên là những ngừoi có năng lực thật sự thì hầu như không quá bị ảnh hưởng bởi vấn đề trên. Tuy nhiên, vẫn có một vài trường hợp theo sự chứng kiến của tôi (trên báo, ngoaì đời) thì cũng đã bị một tràng sa thải không thông báo chính thức mặc dù là một người làm việc chính thức trên 5 năm kinh nghiệm (hay còn gọi là senior theo ngôn ngữ các nhà HR (Human Resource) hay đăng tuyển dụng tuyển ngừoi). Ngoài ra, cũng đang có một sự bất cập khấc đó là các nhà tuyển dụng tuyển intern cũng căng hơn theo nghĩa đen, tức là yêu cầu nhiều kỹ năng khác nhau (kỹ năng đó nói thật lòng lớp tôi 45 đứa thì may ra được 5 đứa). 3. Chi tiết việc học hành, một sinh viên An toàn thông tin cần phải học những gì ? Và tôi vẫn đang vận lộn với chúng Nói thật là nhiều lắm có khi cả đời chả nắm được hết những thứ cơ bản được hết. Chuyên ngành ư ? Thôi xin nói thật ở cái lĩnh vực này, không có cái gì là chuyên ngành cả, nói thật, cứ giả dụ giờ có một ngừoi là có năng lực trình độ đứng số 1 thế giới về An toàn thông tin đi, thì hắn/anh/chị ấy cũng phải liên tục học hỏi, trau dồi các kiến thức mới để có thể theo kịp được tốc độ phát triển kinh hoàng của lĩnh vực công nghệ thông tin hiện nay. Thế nên nếu ai hỏi tôi (gia đình, bạn bè, ngừoi thân,…) mà hỏi câu đấy thì làm ơn là không nên hỏi câu đấy đối với tôi, vì tôi cảm thấy hơi áp lực (có thể mọi người nghĩ “Ui!! Hỏi thế mà đã áp lực rồi” nhưng thưa đấy là với người ngoài chứ thực chất chỉ có người trong cuộc học cái này mới hiểu, người ngoài có ở gầm giường soi mình cả ngày đâu mà biết mình học tập và làm việc thế nào). Còn cụ thể các bạn muốn biết tôi học những gì để làm trùm cái ngành này thì đây: Có ba món quan trọng cần phải học: lập trình, lập trình và lập trình! Để làm việc được trong ngành này, bạn phải yêu thích lập trình. Không có cách nào khác. Thề luôn! (Cá nhân tôi là người lập trình tệ phải nói thật là như vậy, tôi phải học cải thiện môn này thì điểm mới khá hơn cơ mà, mà lúc thi cuối kỳ khi học cải cảm giác chả khác gì lần 1, chả qua do cách tính điểm lại khác với do thời thế nên điểm mới khả quan hơn). Rõ ràng muốn tìm lỗi của phần mềm thì bạn phải hiểu được phần mềm thông qua mã nguồn trực tiếp hay trung gian của nó. Rất có thể bạn sẽ không phải lập trình hàng ngày, nhưng bạn phải viết được những công cụ nhỏ hay những thư viện hỗ trợ cho công việc và các lập trình viên khác. Nhưng mà lập trình bằng ngôn ngữ gì bây giờ? Đây là câu hỏi dễ làm cho các lập trình viên oánh nhau nhất. Cá nhân tôi thấy rằng người làm an toàn thông tin bây giờ cần phải thông thạo C, x86 Assembly, Python và JavaScript, tất nhiên còn một số đống khác, nhưng đó là khá điển hình (thú thật với các bạn trường tôi nó sắp xếp hơi buồn cười, lẽ ra ngành tôi nên học C thay vì Python để hiểu rõ bản chất từng dòng code hơn, nhưng không lại đi cho học cùng với bọn Data Science \u0026 AI và học C không có môn trong chương tr","date":"2023-11-05","objectID":"/vn/20milestone/:0:0","tags":["Thổ Lộ","Đời"],"title":"Chênh vênh giữa tuổi 20 (phần 1)","uri":"/vn/20milestone/"},{"categories":["confess"],"content":"Mở đầu ","date":"2023-08-04","objectID":"/vn/professortamhuyet/:0:0","tags":["confess"],"title":"Một ngày Chủ Nhật ác mộng nhất trong cuộc đời tôi","uri":"/vn/professortamhuyet/"},{"categories":["confess"],"content":"Khái quát Như các bạn đã biết (hoặc không), HUST là một ngôi trường có nhiều thầy cô giỏi, nhưng phải thú thật và thừa nhận với các bạn rằng tôi chưa thấy cô nào lại có thể làm việc hết công suất của mình một cách kinh khủng như vậy. ","date":"2023-08-04","objectID":"/vn/professortamhuyet/:1:0","tags":["confess"],"title":"Một ngày Chủ Nhật ác mộng nhất trong cuộc đời tôi","uri":"/vn/professortamhuyet/"},{"categories":["confess"],"content":"Diễn biến Khi phải thuyết trình miniproject OOPs vào ngày 24/7/2023, những người có thứ tự tên đứng ở danh sách cuối như tôi luôn cảm thấy rất căng thẳng và hồi hộp. Vì sao ??? Vì cô Trang bảo mỗi nhóm thuyết trình 20 phút nhưng thực tế những nhóm đầu cô hỏi rất nhiều và lên đến tận trung bình 1 tiếng cho mỗi nhóm, và tổng cộng có 23 nhóm cơ @@ (tôi ở nhóm 22). Thế nên tôi cũng đã đoán sơ sơ chắc 0h sáng ngày thứ 2 mới đến lược mình thuyết trình thật, và đúng là như vậy. Source: Cô Trang Source: Người nghiện Hút Cô cũng đã hỏi những nhóm cuối rằng liệu có cần hoãn cho bọn tôi sang tối mai được không (tôi nghĩ điều đó thật tồi tệ vì trước mắt tôi còn một ít miniproject khác và kì thi cuối kỳ đầy cam go và thử thách sắp tới, tất nhiên bọn tôi cũng không muốn cô làm tiếp vì nói thật lúc đó 9h tối và cô còn chưa còn ăn tối). Nhưng vì lợi ích của bản thân, nên tất nhiên chúng tôi đã từ chối ý kiến đó và speedrun cho đến 1h sáng hôm sau cả cô và các trò đều xong 23 nhóm (Liệu thành công của đỉnh cao là phải đánh đổi nhiều thứ ????) ","date":"2023-08-04","objectID":"/vn/professortamhuyet/:1:1","tags":["confess"],"title":"Một ngày Chủ Nhật ác mộng nhất trong cuộc đời tôi","uri":"/vn/professortamhuyet/"},{"categories":["Bóng đá"],"content":"Liệu Data Science có thể ứng dụng trong Phân tích Bóng đá? Bóng đá ngày càng được phân tích và dự đoán thông qua các con số biết nói. Và nếu là một Fan thể thao thực thụ, bạn sẽ nhận thấy những con số này chẳng hề mới lạ một chút nào đâu nhé! Và hiển nhiên vấn đề lớn đối với bóng đá chính là dữ liệu. Sẽ không dễ dàng gì để ta có thể ghi lại từng sự kiện diễn ra trong trận đấu. Nhưng thực chất điều đó đang thay đổi bởi mọi hành động trên sân hiện đang được ghi lại và biểu diễn một cách trực quan nhất. Ngày nay bạn có thể tìm hiểu thống kê chi tiết các trận đấu qua từng sự kiện, thông số được ghi lại. Những điều này chắc hẳn còn được các Bình luận viên đề cập từ những chuỗi trận thắng bại hay số những đường chuyền thành bàn của từng đội. Và điều có thể kinh ngạc hơn nữa khi công nghệ còn can thiệp vào quá trình phân tích chỉ sổ, phong độ, hiệu suất cầu thủ để giúp Ban huấn luyện chuẩn bị nhân sự phù hợp cho từng giải đấu. Ví dụ đơn giản nhất là những thống kê rất đơn giản của Optasports.com từ năm 2006 về chạm bóng, chuyền bóng, sút bóng,… mà đến bây giờ họ đã có tới hàng chục nghìn dữ liệu trực quan về từng giải đấu, đội bóng, trận đấu lẫn cầu thủ. Từ một bài toán Phân lớp (Classification) ở Máy học (Machine Learning), ta đã có thể ứng dụng chúng theo dõi chuyển động của cầu thủ trong quá trình tạo nên bàn thắng. Từ đó, những thuật toán từ quá trình thống kê, phân tích bóng đá đã ra đời như “bàn thắng kỳ vọng”, “hiệu suất ghi bàn”, “tỷ lệ thắng”,… ","date":"2023-07-24","objectID":"/vn/footballanalysis/:0:0","tags":["football","analysis"],"title":"Data Science trong bóng đá và thành công đến từ Liverpool F.C","uri":"/vn/footballanalysis/"},{"categories":["Bóng đá"],"content":"Trở lại cùng chức vô địch lịch sử của Liverpool F.C Để khởi đầu cho giấc mơ với tan cơn khát danh hiệu sau nhiều năm chờ đợi, Livepool F.C đã sẵn sàng với vị Giám đốc thể thao Michael Edwards và đầu tư xây dựng đội ngũ nghiên cứu dữ liệu từ năm 2012. Và đứng đầu đội ngũ này chính là Ian Graham - Tiến sĩ Vật lý của ĐH Cambridge cùng hàng loạt những thành viên khác với học vị Tiến sĩ. Nhưng quan trọng nhất, tất đều am hiểu về bóng đá. Và với những phân tích chi tiết về tiềm năng cầu thủ đã giúp Liverpool mang về những tên tuổi như Mane, Firmino, Van Dijk, Alisson,… Đặc biệt hơn hết là chàng cầu thủ tài năng Mohamed Salah người Ai Cập cũng từng bị hoài nghi khi CLB phải chi đến 45 triệu bảng bất chấp anh từng thất bại khi thử việc ở Chelsea (một trong những ông lớn của Giải vô địch nước Anh \u0026 cũng là đối thủ của Liverpool). Ian Graham đã đề nghị Liverpool mua về Salah vì dữ liệu của ông cho thấy anh sẽ kết hợp đặc biệt tốt với Firmino - một tiền đạo khác của Liverpool. Trong mùa giải tiếp theo (17-18), Salah đã biến những mục tiêu được mong đợi đó thành những mục tiêu thực sự. Anh phá vỡ kỷ lục Premier League bằng cách ghi 32 lần. Anh cũng trở thành biểu tượng cho sự hồi sinh của Liverpool. Bạn có bất ngờ khi cú phạt góc của Trent-Alexander Arnold giúp Divock Origi ấn định tỷ số 4-0 trước Barca tại bán kết lượt về Champions League. Để một chàng trai vừa mới vào sân ghi bàn nhanh đến vậy hẳn phải bắt đầu từ những phân tích chuẩn xác của đội ngũ nghiên cứu dữ liệu của Liverpool? Phải chăng việc xây dựng nền móng phát triển bóng đá kết hợp cùng Khoa học - Công nghệ sẽ là điều tất yếu trong xu thế phát triển bóng đá hiện đại? Đó hẳn là lý do theo báo cáo của Financial Times, Liverpool F.C là lá cờ đầu trong ứng dụng phân tích dữ liệu trong bóng đá. Nếu muốn tìm hiểu thêm về đội ngũ phân tích dữ liệu tại Liverpool, bạn có thể tham khảo tại: https://trainingground.guru/staff-profiles/liverpool-staff-profiles ","date":"2023-07-24","objectID":"/vn/footballanalysis/:1:0","tags":["football","analysis"],"title":"Data Science trong bóng đá và thành công đến từ Liverpool F.C","uri":"/vn/footballanalysis/"},{"categories":["Bóng đá"],"content":"Tạm Kết luận Data Science hoàn toàn có thể ứng dụng trong bóng đá bởi vì thể thao chính là lĩnh vực mà tác động của dữ liệu được hiển thị ngay lập tức cho tất cả mọi người. Và nếu bạn muốn tham gia phân tích dữ liệu trong thể thao, Tôi tin rằng lĩnh vực này sẽ rất cần nhiều nguồn nhân lực trong tương lai. Biết đâu bạn có thể trở thành một Chuyên viên phân tích Dữ liệu cho Đội tuyển Quốc gia Việt Nam và gián tiếp đóng góp cho kỳ tích tham gia World Cup lần đầu tiên trong lịch sử nước nhà? Nhưng bạn hãy nên nhớ rằng, nếu bóng đá là một viên đậu thì ta có thể dễ dàng cắm dữ liệu vào một thuật toán và biết mình sẽ làm gì. Tuy nhiên, môn thể thao này vẫn luôn chứa đầy những ẩn số hấp dẫn khiến những điều không thể trở thành có thể. Đôi khi một kế hoạch hoàn hảo có thể bị khắc chế bởi một kế hoạch không hoàn hảo. Nhưng có lẽ đó cũng chính là cách mà xác suất hoạt động bởi bất luận tỷ lệ dự đoán kỹ lưỡng và được cân nhắc thận trọng thì sai số vẫn có thể xuất hiện. Những kết quả không đạt được đôi khi sẽ khiến các nhà phân tích đau đầu nhưng có lẽ điều này càng khiến cuộc chơi trở nên hấp dẫn bao giờ hết. Và cứ thế khi bóng lăn, sẽ có đến hàng triệu điểm dữ liệu được thu thập … ","date":"2023-07-24","objectID":"/vn/footballanalysis/:2:0","tags":["football","analysis"],"title":"Data Science trong bóng đá và thành công đến từ Liverpool F.C","uri":"/vn/footballanalysis/"},{"categories":["Bóng đá"],"content":"Một số link tham khảo về thống kê/ phân tích dữ liệu bóng đá mà Tôi tổng hợp được Advance Football Analytic: http://www.advancedfootballanalytics.com/ Opta: https://www.optasports.com/ Football Outsiders: https://www.footballoutsiders.com/ Anfield Index: https://anfieldindex.com Total Football Analysis: https://totalfootballanalysis.com/ Lưu ý: Bài viết có tổng hợp hình ảnh một số link từ các trang báo lẫn điểm tin phân tích bóng đá trong \u0026 ngoài nước. Mục đích chính chỉ phục vụ việc chia sẻ kiến thức. ","date":"2023-07-24","objectID":"/vn/footballanalysis/:2:1","tags":["football","analysis"],"title":"Data Science trong bóng đá và thành công đến từ Liverpool F.C","uri":"/vn/footballanalysis/"},{"categories":["study"],"content":"Bài viết mẫu hiển thị cú pháp Latex cơ bản.","date":"2023-07-24","objectID":"/vn/introtolatex/","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"1. LaTeX là gì? LaTeX là ngôn ngữ định dạng (document markup language) cho phép người dùng có thể soạn thảo tài liệu chất lượng cao cùng cấu trúc văn bản thống nhất và đồng bộ. LaTeX thường được sử dụng bởi sinh viên, giảng viên lẫn các nhà nghiên cứu về khoa học \u0026 kỹ thuật, cũng như một số lĩnh vực khác. Tiền thân của LaTeX là TeX - ngôn ngữ định dạng do Donald Knuth phát minh nhưng rất khó sử dụng. Sau đó, LaTeX được phát minh bởi Leslie Lamport dựa trên TeX với nhiều cải tiến và trở nên phổ biến cho đến hiện nay. Điểm đặc trưng của LaTeX nằm ở việc khuyến khích người dùng tập trung vào xây dựng nội dung và máy tính sẽ đảm nhiệm việc định dạng[1]. 2. Tìm hiểu về LaTeX ","date":"2023-07-24","objectID":"/vn/introtolatex/:0:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"2.1. Lợi ích từ LaTeX LaTeX có tính thống nhất: khoảng cách dòng, kích cỡ chữ, màu sắc, cách trình bày,… giúp bạn linh hoạt khi chuyển đổi đến văn bản khác. Tự động hoá nhiều thao tác: đánh số chương, xây dựng tiêu đề, tạo bảng, hình ảnh, tham chiếu,… Trích dẫn tài liệu tham khảo một cách tự động và nhất quán với hình thức trình bày gọn gàng. LaTex giúp bạn dễ dàng trình bày các công thức toán học ví dụ: LaTeX dễ làm việc với dự án lớn: Việc định dạng cả trăm, cả ngàn trang trong một file .tex với dung lượng không hề cao sẽ giúp bạn quản lý văn bản dễ dàng. LaTeX hiện có phần lớn packages giúp người dùng thực hiện nhiều công đoạn khác như thêm chú thích, vẽ sơ đồ, tạo bảng,… LaTeX còn có những packages chuyên dụng phục vụ mục đích viết bài báo khoa học, trình chiếu lẫn thực hiện bảng tính. Ảnh 01: Một trong những lợi ích LaTeX mang lại trong việc định dạng văn bản dễ dàng ","date":"2023-07-24","objectID":"/vn/introtolatex/:1:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"2.2. Một số nhược điểm của LaTeX Cần thời gian để xây dựng cấu trúc chung cho tài liệu. Chẳng hạn như xây dựng format cho các bài báo khoa học. Soạn thảo trên LaTeX sẽ có chút tương đồng với việc lập trình - điều đó khiến bạn dễ tốn thời gian nếu gặp những lỗi nhỏ nhặt. Cần thời gian để học và sử dụng thành thạo LaTeX. ","date":"2023-07-24","objectID":"/vn/introtolatex/:2:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"2.3. Một số Editor có thể tham khảo ở LaTeX MiKTeX (Bundle) (Windows) Overleaf (Collaborative Online Editor) Mactex (Bundle) (Mac) Texlive (Bundle) (Linux) Lyx (Bundle \u0026 Editor) (Windows, Mac, Linux) Texmaker (Windows, Mac, Linux) Ở bài viết này, chúng ta sẽ tiến hành tìm hiểu chi tiết cách sử dụng LaTeX qua Editor Overleaf. Để bắt đầu, bạn có thể truy cập Overleaf ngay tại đây. Ảnh 02: Môi trường soạn thảo LaTeX trên Overleaf 3. Tìm hiểu về Overleaf ","date":"2023-07-24","objectID":"/vn/introtolatex/:3:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"3.1. Điểm nổi bật của Overleaf Overleaf là công cụ soạn thảo LaTeX miễn phí mang tính chất cộng tác trên nền web. Overleaf có nhiều tính năng khác biệt vốn nổi bật và thực sự hữu ích cho bất kỳ ai cần viết nhiều lẫn thực hiện cùng nhiều đối tượng. Trong bài viết này, nếu sử bạn không hề thông thạo LaTeX hãy tham khảo một số cú pháp cơ bản về LaTeX tại đây. Sau đó, Mình sẽ cung cấp đến bạn một chuẩn cơ bản khi thực hiện soạn thảo văn bản với LaTeX. Đừng ngần ngại copy các đoạn LaTeX code và chỉnh sửa lại để làm quen dần các bạn nhé! ","date":"2023-07-24","objectID":"/vn/introtolatex/:4:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"3.2. Tạo project LaTeX trên Overleaf Và hơn hết, Mình vẫn khuyến khích bạn học cách sử dụng LaTeX. LaTeX hoàn toàn không khó học và có nguồn thông tin, hướng dẫn gần như vô tận trên Internet về cách sử dụng LaTeX. Bạn sẽ không cần biết sâu về LaTeX (tuy nhiên một số lệnh và cách sử dụng vẫn sẽ cần thiết), và bạn sẽ có một hệ thống tuyệt vời để tự động hoá việc tổ chức bài viết của mình. Hãy tìm hiểu cùng Mình qua các bước sau. ","date":"2023-07-24","objectID":"/vn/introtolatex/:5:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"Bước 1 - Đăng ký tài khoản trên Overleaf Để sử dụng Overleaf, bạn sẽ cần tạo tài khoản. Bạn có thể truy cập và đăng ký tại đây. ","date":"2023-07-24","objectID":"/vn/introtolatex/:6:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"Bước 2 - Tạo project mới sau khi đăng ký tài khoản trên Overleaf Khi bạn đăng nhập, bạn sẽ thấy một hộp có tên là New Project. Nhấp vào hộp thoại này để bắt đầu tạo dự án. Một dự án trong Overleaf là một thư mục chứa một số tệp khác nhau. Nếu bạn nhận được một URL trong email của bạn từ một người có tài liệu và bạn được yêu cầu nhấp vào URL để đến tài liệu, thì bạn đã có một tài liệu để làm việc, vì vậy chỉ cần đăng nhập sẽ dẫn bạn đến tài liệu đó. Khi bạn nhấp vào New Project, bạn sẽ thấy một số mẫu tiêu chuẩn mà Overleaf đã thực hiện cho bạn như Sample Project. Tuy nhiên, chúng ta nên bắt đầu với Blank Project để tìm hiểu tổng quan hơn về các thao tác LaTeX trên Overleaf. Ảnh 03: Môi trường soạn thảo cơ bản trên Overleaf Hãy tiến hành nhìn từ trái sang phải: Ở góc trên cùng bạn sẽ thấy dòng chữ Menu - tại đây chứa các chức năng như Download project, copy project, đếm số lượng chữ/ tiêu đề, liên kết với Git/Dropbox hay một số thao tác Setting chuyên sâu. Cũng ở bên trái, bạn sẽ thấy một bảng điều khiển trông giống như một trình quản lý tệp tin ở bên trái. Theo mặc định, ta sẽ lựa chọn compile file main.tex. Bạn có thể upload thêm các tài liệu văn bản hoặc hình ảnh. Bên cạnh nó, gần một nửa màn hình là một bảng hiển thị tài liệu LaTeX với 2 tuỳ chọn là Source hoặc Rich Text. Nửa bên phải của màn hình sẽ hiển thị kết quả xuất khi xuất ra định dạng PDF. Tài liệu chủ yếu sẽ được compile và hiển thị tự động. Bạn có thể lựa chọn Recompile để có thể tự cập nhật nếu cần kiểm tra khi thực hiện tài liệu. Ở Recompile, bạn cũng có thể lựa chọn giữa việc bật/ tắt chế độ compile tự động, tốc độ compile nhanh (sẽ lưu dạng bản nháp)/ bình thường hay kiểm tra cú pháp trước khi compile. Button tiếp theo bạn cần quan tâm chính là nút Download PDF - icon trắng thứ 2 nhìn từ Recompile. Button này sẽ giúp bạn lưu tài liệu về dạng Pdf nhanh chóng. Ở góc trên cùng bên phải, bạn sẽ thấy button Share - bạn có thể lựa chọn Turn on link sharing để bất kỳ ai có link sẽ truy cập tham khảo và chỉnh sửa tài liệu. Còn nếu đây là tài liệu riêng tư, bạn có thể lựa chọn mời thủ công từng người dùng cộng tác qua email. Bên cạnh button Share bạn sẽ thấy button Submit - button này sẽ giúp bạn submit trực tiếp tài liệu thực hiện đến các hội nghị, tạp chí khoa học uy tín. Đây cũng là một trong những tính năng độc đáo từ Overleaf. Với button History bên cạnh button Share, đây là chức năng giúp bạn xem lại Lịch sử thực hiện chỉnh sửa tài liệu soạn thảo - phù hợp với nhu cầu back-up tài liệu. Ở button cuối cùng Chat - đây là nơi để bạn liên lạc cùng những thành viên cộng tác. Điều đó sẽ giúp bạn tập trung ở Overleaf thay vì phải lựa chọn công cụ thứ 3 nếu phát sinh nhu cầu trao đổi nhóm. ","date":"2023-07-24","objectID":"/vn/introtolatex/:7:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"3.2.1. Về File Manager Panel trong Overleaf Overleaf cung cấp cho bạn một trình quản lý tệp tin giúp bạn có thể lưu trữ các tệp mà bạn sẽ sử dụng trong quá trình soạn thảo của mình. Đây có thể là tài liệu văn bản hoặc hình ảnh (nhớ chỉ tải lên tài liệu PDF, hình ảnh hoặc văn bản). Bạn cũng có thể tạo các thư mục mới nơi bạn có thể lưu trữ các tệp của mình. Lưu ý: Nếu project của bạn bạn có nhiều hình ảnh, bạn có thể tạo các thư mục riêng để giữ hình ảnh của mình. Và trong hướng dẫn này, ta sẽ làm việc với file main.tex được tạo sẵn. ","date":"2023-07-24","objectID":"/vn/introtolatex/:7:1","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"3.2.2. Tìm hiểu về Centre Panel Hãy hình dung đây là khu vực thực hiện công việc soạn thảo chính. Centre Panel sẽ cung cấp cho bạn tất cả các công cụ và một số ràng buộc phục vụ mục đích soạn thảo. Các mục menu ở đây không bao gồm các nút để chèn hình ảnh, bảng và trích dẫn. Qua đó, bạn phải sử dụng mã LaTeX. Và để hình dung rõ hơn, ta hãy tiến hành thiết kế Workflow cho file main.tex. ","date":"2023-07-24","objectID":"/vn/introtolatex/:7:2","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"3.2.3. Một số lưu ý khi thực hiện soạn thảo ở LaTeX Nhìn chung, các tài liệu học thuật như tài liệu nghiên cứu, bài báo khoa học,… luôn có một số cấu trúc phổ biến bao gồm: Metadata: Nơi bạn cung cấp tiêu đề, thông tin tác giả, thời gian và một số thông tin cơ bản khác. Trong LaTeX, bạn có thể hình dung đây là Lời mở đầu. Trong Overleaf, chúng ta đặt phần mở đầu ở đầu file main.tex. Ta sẽ khám phá chi tiết hơn khi chọn tính năng Source để hiển thị tài liệu. Table and figures: Phần lớn nhiều tài liệu học thuật sẽ chứa thông tin dưới dạng bảng và hình. Nếu bạn có nhiều bảng và số liệu, bạn nên đặt các số liệu và bảng trong các tệp riêng biệt có với các tên đơn cử fig.tex và frames.tex. Bằng cách đó, bạn có thể tham khảo chúng từ trong tài liệu hoặc bạn có thể sao chép và dán mã của bảng và số liệu từ các tài liệu đó vào phần cụ thể của tài liệu mà bạn đang viết. Citiation: Dân gian có câu “Nói có sách, mách có chứng”. Việc sử dụng tài liệu tham khảo và trích dẫn chúng sẽ thể hiện sự tôn trọng của ta đến tác giả đã viết lẫn sử dụng tinh tế những tri thức được công nhận nhằm chứng minh cho luận điểm của mình. ","date":"2023-07-24","objectID":"/vn/introtolatex/:7:3","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4. Xây dựng văn bản đầu tiên trên Overleaf Bạn có thể vào Overleaf project của Mình, copy đoạn code này và paste vào link Overleaf của bạn nhé: https://www.overleaf.com/read/yhkrqpqdhcbj Note quan trọng: Hãy lựa chọn compiler là XeLaTeX nếu muốn thử nghiệm các đoạn code trên nhé. ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.1. Về phần khai báo giới thiệu - gồm tiêu đề bài viết lẫn các packages LaTeX cần thiết Đầu tiên, ta sẽ lựa chọn loại document phù hợp. Ví dụ ở đây Ad lựa chọn loại document phù hợp để viết bài báo khoa học với cỡ giấy A4. \\documentclass[a4paper]{article} Liệt kê các packages sử dụng khi soạn thảo. Ở code block sau Ad có nhiều dấu % - mỗi khi ta liệt kê chúng ở đầu dòng nào thì dòng đó sẽ trở thành ghi chú. Với các ghi chú, chúng sẽ chỉ hiển thị ở cửa sổ soạn thảo và không xuất hiện ở file Pdf được xuất sau cùng. % Packages này giúp chúng ta gõ tiếng Việt trên LaTeX \\usepackage[utf8]{inputenc} % Packages này giúp chúng ta chèn hình ảnh vào LaTeX \\usepackage{graphicx} % Đây là đường dẫn đến folder hình ảnh Ad đã tạo \\graphicspath{ {./images/} } Tiếp theo, ta sẽ liệt kê tiêu đề bài viết, tên tác giả và ngày thực hiện tại đây. Bạn có thể tiến hành thay đổi các giá trị bên dưới. \\title{A Sample Document} \\author{Mình} \\date{\\today} ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:1","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.2. Xây dựng nội dung trọng tâm Qua đó, chúng ta đã kết thúc phần khai báo giới thiệu. Ta sẽ đến với phần quan trọng trong quá trình soạn thảo file LaTeX. Đầu tiên, bạn hãy luôn nhớ cú pháp sau: % Dòng code này như một cánh cửa để ta tiến hành bắt đầu xây dựng tài liệu \\begin{document} % Qua các thông tin giới thiệu được liệt kê, ta sẽ khai báo chúng tại đây \\maketitle % \\newpage là lệnh dễ dàng giúp bạn chuyển sang trang mới - Ad liệt kê ở đây vì thông thường một báo cáo chuẩn sẽ luôn dành hẳn một trang để làm trang bìa. \\newpage % ... Các dòng code khác bạn có thể tham khảo thêm ở link Overleaf Ad đã để sẵn nhé. % Dòng code này dùng để kết thúc tài liệu, nếu thiếu dòng code này tài liệu sẽ báo lỗi \\end{document} ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:2","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.3. Xây dựng chương và mục lục tự động Ta sẽ tiến hành tạo mục lục theo cú pháp sau: \\tableofcontents \\newpage Để khai báo các Chương, ta khai báo với dạng \\section, \\subsection và một điểm đặc biệt ở LaTeX là chúng sẽ tự động cập nhật vào mục lục. \\section{Chương 1} \\subsection{Chương con của chương 1} % nếu muốn tiếp tục khai báo chương con, ta lại tiếp tục \\subsubsection , \\subsubsubsection , ... Với các chương được thêm vào, mục lục sẽ được cập nhật tự động như thế này: ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:3","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.4. Thêm hình ảnh trong Overleaf Để thêm hình ảnh, bạn hãy thực hiện theo các bước: Add hình ảnh lên project Overleaf, bạn có thể tạo thêm thư mục để dễ quản lý. Chẳng hạn như ảnh bên dưới, Ad tạo folder images để chứa tất cả hình ảnh. Sử dụng đoạn code sau để add ảnh vào LaTeX nhé! % Đây là cách tiếp cận đơn giản nhất trong việc add ảnh vào LaTeX % Để chỉnh sửa chi tiết hơn, bạn hãy đọc thêm tài liệu LaTeX \\begin{figure}[ht] \\includegraphics[width=\\textwidth]{name_of_the_file} \\end{figure} ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:4","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.5. Thêm table trong Overleaf Xây dựng table mẫu, bạn có thể vào link: http://www.tablesgenerator.com/ để tạo table và copy đoạn code LaTeX ở website vào file. ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:5","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"4.6. Xây dựng danh mục tài liệu tham khảo và trích dẫn trong Overleaf Ta sẽ xây dựng danh mục tài liệu tham khảo đơn giản qua các dòng code sau: \\begin{thebibliography}{2} \\bibitem{doc1} Tên tác giả, \\emph{Tài liệu 1}. Nơi xuất bản. \\bibitem{doc2} Tên tác giả, \\emph{Tài liệu 2}. Nơi xuất bản. \\end{thebibliography} Qua các danh mục tài liệu tham khảo, ta có thể tiến hành trích dẫn qua lệnh \\cite{tên tài liệu được liệt kê ở \\bibitem} ","date":"2023-07-24","objectID":"/vn/introtolatex/:8:6","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"5. Tổng kết Mỗi công cụ soạn thảo luôn có những ưu và nhược điểm nhất định. Tuy nhiên, nếu bạn định hướng theo lĩnh vực nghiên cứu hay dự kiến thực hiện các bài báo khoa học trong tương lai thì LaTeX sẽ là lựa chọn phù hợp dành cho bạn. Cùng với đó, Overleaf cũng sẽ là một trợ thủ đắc lực với một trình soạn thảo online và giúp bạn kết nối soạn thảo cùng những thành viên trong dự án. Team ","date":"2023-07-24","objectID":"/vn/introtolatex/:9:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"Nguồn tham khảo: [1] Khoá học LateX online được biên soạn bởi Tiến sĩ Dr John Lees-Miller và trình bày ban đầu tại Đại học Bristol. [2] How to use Overleaf to Write your papers - Arindam Basu. ","date":"2023-07-24","objectID":"/vn/introtolatex/:10:0","tags":["latex"],"title":"Giới thiệu về LATEX","uri":"/vn/introtolatex/"},{"categories":["study"],"content":"Bài viết mẫu hiển thị cú pháp Markdown cơ bản và định dạng phần tử HTML.","date":"2023-07-24","objectID":"/vn/weka/","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"Xây dựng mô hình Classification - Machine Learning cơ bản với Weka Đừng nghĩ Machine Learning chỉ dành cho những chuyên gia. Bởi nếu là một người học/ người dùng không chuyên với mong muốn tiếp cận Machine Learning thì Weka sẽ là một sự lựa chọn không tồi tý nào. Weka là một tập hợp các thuật toán học máy cho các nhiệm vụ khai thác dữ liệu. Nó chứa các công cụ để chuẩn bị dữ liệu, phân loại, hồi quy, phân cụm, khai thác quy tắc kết hợp và trực quan hóa. Weka là phần mềm nguồn mở được cấp theo GNU General Public License. Sản phẩm được xây dựng bởi nhóm nghiên cứu Machine Learning thuộc Khoa Khoa học Máy tính của Đại học Wakaito, New Zealand. Đặc biệt, Weka còn hỗ trợ việc học tập Deep Learning. Bạn có thể khám phá thêm về Weka tại đây: https://www.cs.waikato.ac.nz/ml/weka/index.html ","date":"2023-07-24","objectID":"/vn/weka/:0:0","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"Vì sao nên chọn Weka? Một lợi ích lớn của việc sử dụng Weka là nó chứa số lượng lớn các thuật toán Machine Learning được hỗ trợ. Càng nhiều thuật toán càng giúp mình tìm hiểu tường tận về vấn đề của bản thân và dễ dàng so sánh các thuật toán với nhau. Điển hình hơn hết là Weka đã có sẵn các thuật toán chúng ta tiếp cận Case Study Titanic một cách trực quan hơn. Ở đây ta sẽ tiếp cận với 3 thuật toán Classification cơ bản: K-Neighrest Neighbor, Naive Bayes \u0026 Decision Tree. ","date":"2023-07-24","objectID":"/vn/weka/:1:0","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"Tìm hiểu về Case Study Titanic Vào ngày 15 tháng 4 năm 1912, trong chuyến hành trình đầu tiên của mình, tàu Titanic đã chìm sau khi va chạm với một tảng băng trôi và lấy đi 1502 trong số 2224 hành khách lẫn phi hành đoàn. Thảm kịch giật gân này đã gây sốc cho cộng đồng quốc tế và dẫn đến các quy định an toàn tốt hơn cho tàu. Mặc dù có một số yếu tố may mắn liên quan đến việc sống sót sau vụ chìm tàu, một số nhóm người có khả năng sống sót cao hơn những người khác, chẳng hạn như phụ nữ, trẻ em và giới thượng lưu. Ở Case Study này, ta sẽ tiến thành phân tích về những loại người có khả năng sống sót. Cụ thể, ta sẽ sử dụng công cụ học máy để dự đoán hành khách nào sống sót sau thảm kịch. Bạn có thể tham khảo thêm về Case Study này và lấy dữ liệu tại đây: https://www.kaggle.com/c/titanic/overview Input Từ dữ liệu gốc, mình sẽ tối giản chúng. Mình đã lọc ra vài thuộc tính quan trọng lẫn chỉnh sửa tên thuộc tính ảnh hưởng đến khả năng sống sót (survived) của hành khách trên tàu Titanic. Thuộc tính đầu vào của mình sẽ bao gồm: Thuộc tính Định nghĩa Giải thích class Loại vé - Ticket class. Có thể là vé hạng nhất, hạng hai,… 1 = 1st, 2 = 2nd, 3 = 3rd gender Giới tính Đã chuẩn hoá 0 - Nữ và 1 - Nam age Tuổi tác 1 - adult và 0 - children survived Khả năng sống sót 0 - không và 1 - Có Nếu muốn test thử bộ dữ liệu đã được chuẩn hoá từ mình, bạn có thể download tại đây: https://drive.google.com/file/d/13ycO_k8erbZrS-cxa-F8RlWlfitF57Kv/view?usp=sharing Output: Dữ liệu đầu ra rất đơn giản đưa ra dự đoán về khả năng tử nạn của các hành khách còn lại dựa trên những yếu tố biết trước như tên, tuổi, giới tính, số người đi cùng, vị trí phòng v…v. Ý nghĩa: Bài toán cho phép chúng ta có thể dựa vào đó để dự đoán khả năng sống sót của một người dựa trên một thảm họa từ đó có thể rút ra những kinh nghiệm trong các chuyến hành trình trong tương lai, Có thể là thiết kế lại tàu một cách an toàn hơn, dịch vụ chăm sóc, cảnh báo,… Phân tích: Có thể dễ nhận thấy đây là một bài Two-Class Classification với kết quả đầu ra là survived hay không. ","date":"2023-07-24","objectID":"/vn/weka/:2:0","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"How to use Weka? Cá nhân mình nghĩ việc sử dụng Weka rất đơn giản, bạn chỉ việc cài đặt và chọn CSV file. Okay và tiếp đến các bạn chọn mục Classify: Ở Classifier, các bạn chọn thuật toán phù hợp mình muốn test. Mình sẽ test thử thuật toán K- Neighrest Neighbor đầu tiên. Tiếp đến ở test option bạn có thể chọn: Use training set: Sử dụng toàn bộ dữ liệu để huấn luyện mô hình. Supplied test set: Bạn cung cấp thêm test set để kiểm tra mô hình. Cross-validation: Hay còn gọi là k-fold Cross validation. Phương pháp này phân chia dữ liệu thành k tập con có cùng kích thước. Tại mỗi vòng lặp sử dụng một tập con là tập thử nghiệm và các tập con còn lại là tập huấn luyện. Giá trị k thường là = 10. Ta có thể dùng một trong hai cách: + Leave-one-out : k=số mẫu trong dữ liệu (dành cho tập dữ liệu nhỏ) + Stratified cross-validation : dùng phương pháp lấy mẫu để các lớp trong từng tập con phân bố như trên toàn bộ dữ liệu. Percentage split: Chia dữ liệu thành training set, test set tuỳ vào % bạn muốn. Tương tự ta tiếp tục với thuật toán Decision Tree ID3 và Naive Bayes. Qua đó chúc mọi người có những trải nghiệm thú vị cùng Weka. Trước khi sử dụng cũng đừng quên cảm ơn khoa Khoa học Máy tính - Đại học Wakaito, New Zealand đã mang đến một sản phẩm tuyệt vời như thế này mọi người nhé! ","date":"2023-07-24","objectID":"/vn/weka/:3:0","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"More information about Weka Chi tiết về tool (bao gồm link tải, tài liệu hướng dẫn và cả khoá học): https://www.cs.waikato.ac.nz/ml/weka/index.html Để add ID3 Decision Tree vào Weka: https://stackoverflow.com/questions/48888463/weka-3-8-package-installation-what-are-the-steps-to-add-id3 Nếu các bạn không thấy KNN trong Lazy, hãy chọn IBk classifier Một bài viết mình thấy cũng thú vị cho bạn nào chưa rõ về đánh giá mô hình: https://ongxuanhong.wordpress.com/2015/08/25/danh-gia-mo-hinh-model-evaluation/ ","date":"2023-07-24","objectID":"/vn/weka/:4:0","tags":["weka"],"title":"Giới thiệu về Weka","uri":"/vn/weka/"},{"categories":["study"],"content":"Bài viết mẫu hiển thị các kiến thức cơ bản về toán.","date":"2023-07-24","objectID":"/vn/fundamentalmath1/","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Kiến thức toán cho lĩnh vực Data Science (Phần 1) Để bắt đầu học Machine Learning hay Data Science, người học sẽ bị choáng ngợp bởi khối lượng kiến thức đồ sộ liên quan đến lĩnh vực Toán học. Đây cũng là điều hiển nhiên bởi Toán học luôn là nền tảng cho bất kỳ ngành Khoa học đương đại nào. Sự vững chắc về nền tảng toán học hình thành đằng sau các thuật toán sẽ tạo cho bạn một lợi thế không hề nhỏ so khi nghiên cứu và làm việc ở lĩnh vực Data Science. Bởi hơn hết, doanh nghiệp luôn chỉ trả rất nhiều tiền cho công nghệ bên trong máy móc thay vì người vận hành vốn không có bất kỳ kiến thức chuyên sâu nào về chúng. Bạn hiểu ý này chứ ? Để tìm hiểu chuyên sâu hơn ta có thể hình dung một quy trình khoa học phổ biến trong xử lý Âm thanh như sau: Khai thác thông tin, tính chất vật lý của âm thanh và Mô hình hóa quá trình hình thành chúna Xây dựng giả thuyết hình thành về chúng Ước tính độ chất lượng của nguồn dữ liệu thu thập được Định lượng sự không chắc chắn xung quanh dữ liệu và dự đoán Xác định mẫu ẩn từ luồng thông tin Khai thác và tìm hiểu giới hạn của một mô hình Nghiên cứu bằng chứng toán học và logic trừu tượng đằng sau nó Qua đó, ta có thể thấy bản chất của Data Science không gắn liền với một lĩnh vực hay một chủ đề cụ thể mà còn có thể xử lý rất nhiều vấn đề, hiện tượng đa dạng như Chuẩn đoán bệnh ung thư hay dự báo thời tiết. 1) Tìm hiểu về Biến, Hàm số, Phương trình và Đồ thị Các lĩnh vực Toán học những điều cơ bản chúng ta vốn đọc học từ Trung học trở đi. Hãy cùng Ad tổng hợp một số nền tảng cơ bản này nhé: Hàm số logarit, hàm mũ, hàm số đa thức, số hữu tỉ Hình học và định lý cơ bản, kiến thức về lượng giác Số thực và số phức cùng những tính chất cơ bản Kiến thức về Chuỗi, tổng, bất đẳng thức Vẽ và biểu diễn đồ thị, kiến thức về tọa độ Descartes và toạ độ cực, đường conic ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:0","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Những kiến thức này vận dụng ra sao ? Với những lập trình viên thì chúng ta đều đã tìm hiểu qua các thuật toán tìm kiếm và sắp xếp. Và nếu như bạn chưa biết đến thì Ad có thể giải thích như sau: Thuật toán tìm kiếm như việc bạn tìm kiếm số thứ tự của mình trong phòng thi trong danh sách. Thuật toán sắp xếp đơn thuần là việc sắp xếp các phần tử trong danh sách theo thứ tự tăng và giảm dần. Và với lập trình cài đặt trên máy tính thì từng thuật toán sắp xếp khác nhau sẽ thực hiện trong các mốc thời gian khác nhau. Thuật toán thực hiện nhanh hay chậm còn phụ thuộc vào các yếu tố khác như kích thước bộ dữ liệu, độ phức tạp của thuật toán, … Qua đó, nếu Ad ứng dụng chúng để tối ưu việc tìm kiếm trên Cơ sở dữ liệu với hàng chục triệu phần tử thì sẽ không khó khăn khi chúng ta bắt gặp khái niệm “Binary Search”. Tuy nhiên nếu muốn tối ưu chương trình thì ta không chỉ ngồi đó và áp source code có sẵn vào để test đúng không nào? ^^ Để một chương trình tìm kiếm được tối ưu, ta phải cần hiểu về khái niệm logarit lẫn sự lặp lại của phương trình. Qua việc tính toán trong thời gian chạy logarit, bạn có thể hình dung ra những không gian tìm kiếm phù hợp cho thuật toán nhằm xây dựng cấu trúc dữ liệu phù hợp. Chính vì thế “Binary Search” luôn xuất hiện nhiều biến thể với hiệu suất ngày càng tăng. Tham khảo Binary search Algorithm: https://en.wikipedia.org/wiki/Binary_search_algorithm ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:1","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Bạn có thể bổ sung kiến thức về Toán ở đâu ? Website Machine Learning cơ bản: https://machinelearningcoban.com/math/#luu-y-ve-ky-hieu Data Science Math Skills - Coursera: https://www.coursera.org/learn/datasciencemathskills Introduction to Algebra - edX: https://www.edx.org/course/introduction-algebra-schoolyourself-algebrax-1 Algebra I - Khan Academy: https://www.khanacademy.org/math/algebra ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:2","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"2) Kiến thức về Thống kê (Statistics) Cho tới nay, nhiều bạn thường cho rằng Thống kê chủ yếu thuộc về phạm trù Kinh tế. Nhưng có lẽ bạn sẽ bất ngờ thực sự vì chúng liên quan đến Data Science rất nhiều là đằng khác. Có thể nói nếu bạn đã theo lĩnh vực Data Science việc hiểu biết Lập trìn hay ngôn ngữ cũng chỉ là công cụ. Cái cốt lõi mà người học Data Science lẫn Machine Learning (Máy học) phải nắm thật vững là Toán và Xác suất thống kê. Nếu nói theo một cách tán gẫu, ta còn có một công thức: Data Science = Big Data + Statistics + Computer Science Và hiện nay thì Việt Nam chúng ta luôn đầy rẫy những vấn đề thực tế. Với chủ đề rộng lớn như vậy thì việc lập ra kế hoạch là vô cùng quan trọng để đảm bảo chúng ta luôn bao quát mọi thứ: Tóm tắt dữ liệu và thống kê mô tả, xu hướng trung tâm, phương sai, hiệp phương sai, tương quan Xác suất cơ bản: cơ bản, kỳ vọng, tính toán xác suất, định lý Bayes, xác suất có điều kiện Các hàm phân phối xác suất: thống nhất, bình thường, nhị thức, bình phương, định lý giới hạn trung tâm Lấy mẫu, đo lường, tạo số ngẫu nhiên Kiểm tra giả thuyết lẫn độ tin cậy, độ lỗi,… Hồi quy tuyến tính, kỹ thuật chính quy hoá ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:3","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Những kiến thức này vận dụng ra sao ? Những kiến thức về Toán, Thống kê,… chính là điểm khác biệt trong Mindset của một Data Science. Nhiệm vụ của bạn chính là đặt câu hỏi và tìm hiểu thật kỹ vấn đề thực tế mình cần giải quyết. Một khi vấn đề được xác định thì đó là lúc bạn sẽ tiến hành thu thập dữ liệu và phân tích thật kỹ lưỡng không khác gì Sherlock Holmes. Với kiến thức về Toán lẫn Thống kê, bạn có thể tự đặt ra những giả thuyết về dữ liệu mình đang xét hay phán đoán kết quả từ giải thuyết và không ngừng hình thành những câu hỏi mới nhằm phân tích dữ liệu thật chuẩn xác. ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:4","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Bạn có thể bổ sung kiến thức về Thống kê ở đâu ? Statistics and Probability in Data Science using Python - edX: https://courses.edx.org/courses/course-v1:UCSanDiegoX+DSE210x+3T2017/course/ Data Science - D2Academics: https://d2academics.thinkific.com/courses/take/data-science/ Statistics with R Specialization - Coursera: https://www.coursera.org/specializations/statistics Business Statistics and Analysis Specialization - Coursera: https://www.coursera.org/specializations/business-statistics-analysis (Sách tiếng Việt) Phân Tích Dữ Liệu Với R – Hỏi Và Đáp (Tái Bản 2018) - Nguyễn Văn Tuấn Qua phần đầu của chủ đề Kiến thức toán cho lĩnh vực Data Science, mình mong rằng có thể cung cấp đến các bạn một chút hành trang trên con đường trở thành những Data Scientist thực thụ. Những kiến thức về Toán còn lại sẽ được Ad đề cập tại phần sau, hãy theo dõi mình để luôn cập nhật những bài post mới nhất các bạn nhé! ","date":"2023-07-24","objectID":"/vn/fundamentalmath1/:0:5","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 1)","uri":"/vn/fundamentalmath1/"},{"categories":["study"],"content":"Bài viết mẫu hiển thị các kiến thức cơ bản về toán.","date":"2023-07-24","objectID":"/vn/fundamentalmath2/","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 2)","uri":"/vn/fundamentalmath2/"},{"categories":["study"],"content":"Kiến thức toán cho lĩnh vực Data Science (Phần 2) ","date":"2023-07-24","objectID":"/vn/fundamentalmath2/:0:0","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 2)","uri":"/vn/fundamentalmath2/"},{"categories":["study"],"content":"3) Đại số tuyến tính Bạn có bao giờ thắc mắc khi lướt Facebook và nhận được gợi ý kết bạn hay việc Netflix luôn gợi ý các phim phù hợp với sở thích bản thân mình. Đó được gọi là Recommend System với các thuật toán được triển khai trong quá trình thu thập, phân tích dữ liệu về thông tin, xu hướng người dùng để đưa ra các gợi ý phù hợp cho người dùng trên hệ thống. Tại đây, kiến thức Đại số tuyến tính sẽ được áp dụng giúp chúng ta hiểu chuyên sâu hơn cách thuật toán học máy hoạt động trên luồng dữ liệu. Từ đó các Data Scientist sẽ dễ dàng phân tích, xử lý insight trong dữ liệu một cách chi tiết nhất. Hãy cùng mình tìm hiểu những kiến thức cơ bản về Đại số tuyến tính cần có nào: Các tính chất cơ bản của ma trận và vector: phép nhân vô hướng, biến đổi tuyến tính, chuyển vị, liên hợp, … Quy tắc nhân ma trận và các thuật toán khác nhau, nghịch đảo ma trận Các Ma trận đặc biệt: ma trận vuông, ý tưởng về ma trận thưa thớt và dày đặc, vector đơn vị, ma trận đối xứng, ma trận đơn vị,… Mô hình phân tích ma trận thành nhân tử (Matrix Factorization) / phân tích LU, loại bỏ Gaussian / Gauss-Jordan, giải hệ phương trình tuyến tính Ax = b Cơ sở không gian vector, tính trực giao, bình phương tuyến tính nhỏ nhất Vector riêng \u0026 giá trị riêng trong ma trận, chéo hoá ma trận, phương pháp Singular Value Decomposition (SVD) Kiến thức này được ứng dụng ra sao? Tất cả các thuật toán neural network đều sử dụng các kỹ thuật đại số tuyến tính để biểu diễn và xử lý các cấu trúc mạng lẫn huấn luyện dữ liệu. Kiến thức Đại số tuyến tính còn ứng dụng trong xử lý ảnh hay các thao tác, biểu diễn dữ liệu thực tế. Tôi có thể học chúng từ đâu? Linear algebra: foundations to frontiers - edX: https://courses.edx.org/courses/course-v1:UTAustinX+UT.5.05x+2T2017/course/ Mathematics for Machine Learning: Linear Algebra - Coursera: https://www.coursera.org/learn/linear-algebra-machine-learning Python cho Đại số Tuyến tính - Machine learning Cơ bản: https://fundaml.com/course/5990a766cdc6e32b3b4d0666/intro Kiến thức về Đại số Tuyến tính cũng được đề cập kết hợp quiz + assignment để kiếm tra kiến thức tại Week một khoá Machine Learning - Coursera: https://www.coursera.org/learn/machine-learning ","date":"2023-07-24","objectID":"/vn/fundamentalmath2/:1:0","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 2)","uri":"/vn/fundamentalmath2/"},{"categories":["study"],"content":"4) Giải tích (Calculus) Giải tích chắc hẳn là một trong những môn học đại cương khá “ám ảnh” đối với sinh viên khối Khoa học - Kỹ thuật lẫn Kinh tế. Nhưng bất luận thực trạng sinh viên sợ hãi môn học ra sao thì Giải tích vẫn xuất hiện tất yếu trong Machine Learning lẫn Data Science. Giải tích hình thành nên các giải pháp phân tích tưởng chừng cơ bản như Hồi quy tuyến tính (Linear Regression). Mà hơn hết, khi xây dựng một mô hình thuật toán máy học để phân tích và dự đoán giả thuyết dữ liệu thì Giải tích sẽ đóng vai trò quan trọng trong quy trình tìm độ lỗi cực tiểu cho mô hình và tối ưu hoá độ chính xác của mô hình. Đây là một môn học khó nhưng sẽ cực kỳ giá trị nếu bạn được trang bị kiến thức Giải tích trên con đường trở thành Data Scientist. Hãy cùng Ad tìm hiểu những kiến thức cơ bản cần nắm nào: Kiến thức về Hàm số một biến, giới hạn, liên tục, khác biệt Các định lý về giá trị trung bình (Mean value theorems), các dạng không xác định, quy tắc L’Hospital Tính cực đại và cực tiểu của hàm số Quy tắc nhân (Product rule), Quy tắc dây chuyền (Chain rule) Chuỗi Taylor, khái niệm tổng hợp / tích hợp chuỗi vô hạn Các định lý giá trị cơ bản và trung bình của phép tính tích phân, đánh giá tích phân xác định và không xác định Hàm Gamma và hàm Beta Kiến thức về Hàm số nhiều biến, giới hạn, liên tục, đạo hàm riêng Khái niệm cơ bản của phương trình vi phân Tôi sẽ sử dụng kiến thức này ở đâu? Bạn đã bao giờ từ hỏi thuật toán Logistic Regression thực hiện như thế nào? Phải chăng là chúng sử dụng phương pháp mang tên “Gradient Descent” để tìm hiểu hàm mất mát tối thiểu. Để hiểu cách thức hoạt động của nó, bạn cần nắm các khái niệm về độ dốc, đạo hàm, giới hạn hàm số lẫn quy tắc chuỗi. Tham khảo thuật toán Logistic Regression: https://machinelearningcoban.com/2017/01/27/logisticregression/ Tôi có thể bổ sung kiến thức Giải tích ở đâu ? Pre-university calculus - edX: https://www.edx.org/course/pre-university-calculus Calculus I - Khan Academy: https://www.khanacademy.org/math/calculus-1 Mathematics for machine learning: Multivariable calculus - Coursera: https://www.coursera.org/learn/multivariate-calculus-machine-learning ","date":"2023-07-24","objectID":"/vn/fundamentalmath2/:2:0","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 2)","uri":"/vn/fundamentalmath2/"},{"categories":["study"],"content":"5) Toán rời rạc (Discrete Math) Data Science hiện nay được thực hiện với sự trợ giúp của các hệ thống tính toán và Toán rời rạc là trung tâm của các hệ thống ấy. Toán rời rạc sẽ bao gồm các khái niệm quan trọng đối với việc sử dụng hàng ngày các thuật toán và cấu trúc dữ liệu trong những project phân tích: Tìm hiểu về phép đếm, tổ hợp,… Nắm những kỹ thuật chứng minh cơ bản Khái niệm cơ bản của logic quy nạp, suy diễn và mệnh đề Hiểu được Cấu trúc dữ liệu cơ bản: ngăn xếp, hàng đợi, đồ thị, mảng, bảng băm, cây Những niệm cơ bản của Đồ thị và ứng dụng Hệ thức truy hồi Tôi có thể bổ sung kiến thức này ở đâu ? Ví dụ khi phân tích về bài toán hành vi người dùng mạng xã hội, dữ liệu có thể được mô phỏng như các thuộc tính của biểu đồ và ta cần nghiên cứu thuật toán nhanh nhất để tìm kiếm lẫn duyệt qua từng điểm đồ thị. Và việc học cấu trúc rời rạc sẽ giúp bạn tìm hiểu độ phức tạp của thuật toán ở những không gian và thời gian khác nhau. Từ đó sẽ giúp bạn chọn lựa thuật toán phù hợp để giải quyết vấn đề của mình. Tôi có thể học Toán rời rạc ở đâu? Introduction to Discrete Mathematics for Computer Science Specialization - Coursera: https://www.coursera.org/specializations/discrete-mathematics Master discrete mathematics: sets, math logic, and more - Coursera: https://www.udemy.com/master-discrete-mathematics/ Introduction to Mathematical Thinking - Coursera: https://www.coursera.org/learn/mathematical-thinking Tổng kết Để trở thành một DS quả là một quá trình dài để học tập, rèn luyện tri thức lẫn mindset dúng không nào. Qua đó, ta có thể thấy từ bài toán đến ứng dụng thực tiễn luôn là một thử thách lớn và lại càng gắn liền với trách nhiệm nếu bạn phụ trách cho Doanh nghiệp. Bởi nguy hiểm vẫn là việc “Sai một ly đi một dặm” dẫn đến một rủi ro không hề nhỏ. Hãy không ngừng đặt ra những câu hỏi và cố gắng vận dụng tri thức tìm ra lời giải phù hợp lẫn tối ưu nhất. Trong giai đoạn Hội nhập của Việt Nam hiện nay, cơ hội vẫn luôn trong tầm tay bạn khi và chỉ khi bản thân luôn nỗ lực hết mình. ","date":"2023-07-24","objectID":"/vn/fundamentalmath2/:3:0","tags":["math","data science","probability and statistic"],"title":"Kiến thức toán cơ bản cho Data Science (phần 2)","uri":"/vn/fundamentalmath2/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Bài viết mẫu hiển thị cú pháp Markdown cơ bản và định dạng phần tử HTML.","date":"2023-07-13","objectID":"/vn/markdownsyntax/","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Bài viết này là một ví dụ cơ bản để hiển thị cú pháp Markdown được sử dụng trong các tệp nội dung của Hugo. Nó cũng cho thấy cách mỗi phần tử HTML cơ bản được tạo kiểu bằng CSS với chủ đề Hugo. ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:0:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Tiêu đề Các phần tử HTML sau \u003ch1\u003e-\u003ch6\u003e đại diện cho 6 cấp độ tiêu đề của phần. \u003ch1\u003e là dành cho các phần cấp cao nhất trong khi \u003ch6\u003e là dành cho cấp thấp nhất. H1 ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:1:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"H2 ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:2:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"H3 H4 H5 H6 ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:2:1","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Đoạn văn Xerum, người mà tôi có thể giải thích ai đang đau đớn. Và khi tôi đến với bạn, khi tôi tràn ngập niềm vui, tôi đau đớn, hoặc tôi được sinh ra, hoặc tôi là một kẻ ngốc, vì người đã làm tôi đau đớn với niềm vui của tôi, là chuyên gia về mọi thứ, hoặc những gì anh ta đã xé nát và rách nát, và ý chí của anh ta bị xé nát, như thể anh ta đáng được chở che, anh ta có đi đến trái tim và làm theo những điều giống nhau không? Tại sao lỗ chân lông lại nhô lên, khi nó được đặt ở một nơi không biết ý muốn của chuột hay vạn vật? Tôi sẽ im lặng. Đối với tất cả những gì tôi là, trái tim tôi bị xáo trộn theo cách này hay cách khác, và tôi xé chúng ra và làm khô chúng, để tôi có thể giết chúng hoặc ném chúng đi. Anh ta ghét sự thật, mà làn sóng veliamenim là nguyên nhân và bản thân khuôn mặt, bạn đang ở trong tình huống đau đớn của phiên bản. Là nó đi du lịch? Bởi vì trong chuyện của mỗi người có một số điều bạn ghét hoặc bạn ghét, bạn sẽ ăn để không để sự khôn ngoan của mình che giấu sự thật rằng trái tim và trái tim hoặc điều đó thật buồn cười. ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:3:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Trích dẫn Thành phần trích dẫn đại diện cho nội dung được trích dẫn từ một nguồn khác, tùy chọn có nguồn được chứa trong một phần tử footer hoặc cite, và cũng tùy chọn với thông tin in dòng như ghi chú và viết tắt. Trích dẫn không có nguồn Sau đó, để đúc andaepu, kiến ​​​​thức được cung cấp sẽ được cắt giảm tương ứng. Lưu ý rằng bạn có thể sử dụng cú pháp Markdown trong một trích dẫn. Trích dẫn có nguồn Không giao tiếp bằng cách chia sẻ bộ nhớ, hãy chia sẻ bộ nhớ bằng cách giao tiếp. — Rob Pike1 ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:4:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Bảng Bảng không phải là một phần cốt lõi của thông số kỹ thuật Markdown, nhưng Hugo hỗ trợ chúng. Tên Tuổi Bob 27 Alice 23 Bảng với Markdown trong dòng Italics Bold Code italics bold code ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:5:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Khối mã Khối mã với dấu ngoặc đơn \u003c!DOCTYPE html\u003e \u003chtml lang=\"vi\"\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eVí dụ về HTML5\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cp\u003eKiểm tra\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e Khối mã với bốn khoảng trắng \u003c!doctype html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\"\u003e \u003ctitle\u003eExample HTML5 Document\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cp\u003eTest\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e Khối mã với shortcode highlight nội bộ của Hugo \u003c!doctype html\u003e \u003chtml lang=\"pt-br\"\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\"\u003e \u003ctitle\u003eVí dụ về HTML5\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cp\u003eKiểm tra\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:6:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Loại danh sách Danh sách được sắp xếp Mục đầu tiên Mục thứ hai Mục thứ ba Danh sách không được sắp xếp Một mục Một mục khác Một số mặt hàng khác Danh sách lồng nhau Trái cây Rác Quả cam Chuối Các sản phẩm từ sữa sữa Phô mai Chú thích Đánh dấu2 ở cuối3 của văn bản này4. ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:7:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["Cú pháp","Bản trình diễn chủ đề"],"content":"Các yếu tố khác — abbr, sub, sup, kbd, mark GIF là định dạng ảnh bitmap. H2O Xn + Yn = Zn Nhấn CTRL+ALT+Xoá để đóng. Hầu hết kỳ nhông là loài sống về đêm và săn côn trùng, sâu và các sinh vật nhỏ khác. Đoạn trích trên được lấy từ màn trình diễn của Rob Pike trong Gopherfest, ngày 18 tháng 11 năm 2015. ↩︎ Chú thích cuối trang. ↩︎ Một cái khác ở đây. ↩︎ Hay nhỉ? ↩︎ ","date":"2023-07-13","objectID":"/vn/markdownsyntax/:8:0","tags":["hugo","markdown","css","html"],"title":"Hướng dẫn cú pháp Markdown","uri":"/vn/markdownsyntax/"},{"categories":["C"],"content":"Cho một số dãy nguyên dương a gồm N phần tử. Hãy đếm số cặp (i,j) thỏa mãn: \\(1 \\leq i \\leq j \\leq N\\) \\(a_i^2 + a_j = X\\) Input format Dòng đầu tiên gồm 2 số nguyên dương N, X Dòng thứ hai gồm N số nguyên dương \\( a_1, a_2, a_3, …, a_N\\) Constraints \\(2 \\leq N \\leq 500\\) \\(1 \\leq X \\leq 10^{18}\\) \\(1 \\leq a_i \\leq 10^6\\) Output format In ra số cặp (i, j) thỏa mãn Sample Input 0 10 12 3 3 3 3 3 3 3 3 3 3 Sample Output 0 55 Sample Input 1 5 1 2 3 4 5 6 Sample Output 1 0 Hãy chú ý giá trị vì khả năng int chỉ đến 2^16 thôi tăng long long int lên 2^64 để giải quyết hết vấn đề #include \u003cstdio.h\u003e #include \u003cstring.h\u003e #include \u003cmath.h\u003e #include \u003cstdlib.h\u003e int main() { /* Enter your code here. Read input from STDIN. Print output to STDOUT */ long long int N, X; long long int* arr; scanf(\"%lld %lld\", \u0026N, \u0026X); arr = (long long int*)malloc(N * sizeof(long long int)); for (int i =0; i \u003c N; i++){ scanf(\"%lld\",(arr+i)); } int cnt = 0; for (int i = 0; i \u003c N ; i++){ for (int j = i; j \u003c N; j++){ if (pow(*(arr+i),2) + *(arr+j) == X){ cnt += 1; //printf(\"Pair found: %d, %d\\n\", arr[i], arr[j]); } } } printf(\"%d\", cnt); free(arr); return 0; } ","date":"2023-07-07","objectID":"/vn/demsocap/:0:0","tags":["Hackerrank","300 bài code Mely"],"title":"Đếm số cặp","uri":"/vn/demsocap/"},{"categories":null,"content":"Hệ thống mã hóa đối xứng Còn gọi là mã hóa quy ước (conventional cryptosystem) Quy trình mã hóa và giải mã đều sử dụng chung một khóa Bảo mật thông tin phụ thuộc vào bảo mật khóa ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:0:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Các phương pháp truyền thống Phép thay thế (subtitution) Phép thay đổi vị trị (transposition) Đơn ký tự (mono-alphabetic) Đa ký tự (poly - alphabetic) (xem lại CSC15005) ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:1:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Shift Cipher, mã hóa Caesar Dịch chuyển xoay vòng từng ký tự đi $k$ vị trí. $k = 3$ là mã hóa Caesar. Cho $\\mathcal{P} = \\mathcal{C} = \\mathcal{K} = \\mathbb{Z}_n$. Với mỗi khóa $k \\in \\mathcal{K}$, định nghĩa $e_k(x) = x + k \\pmod n$ và $d_k(y) = y - k \\pmod n; x, y \\in \\mathbb{Z}_n$ $\\mathcal{E} = {e_k, k \\in \\mathcal{K}}$ và $\\mathcal{D} = {d_k, k \\in \\mathcal{K}}$ Tính chất: Phương pháp đơn giản Thao tác xử lý mã hóa \u0026 giải mã thực hiện nhanh Không gian khóa ${0, 1, 2, .., n - 1} = \\mathbb{Z}_n$ Dễ bị phá vỡ bằng brute-force. ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:2:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Subtitution Cipher Hoán vị các phần tử trong bảng chữ cái. Tổng quát hơn: hoán vị (permute) các phần tử trong tập nguồn $\\mathcal{P}$. Cho $\\mathcal{P} = \\mathcal{C} = \\mathbb{Z}_n, \\mathcal{K}$ là tập hợp các hoán vị của $n$ phần tử $0, 1, .., n - 1$. Vậy, mỗi khóa $\\pi \\in \\mathcal{K}$ là một hoán vị của $n$ phần tử $0, 1, .., n - 1$. Với mỗi khóa $\\pi \\in \\mathcal{K}$, định nghĩa: $e_{\\pi}(x) = \\pi(x)$ và $d_{\\pi}(y) = \\pi^{-1}(y); x, y \\in \\mathbb{Z}_n$ $\\mathcal{E} = {e_{\\pi}, \\pi \\in \\mathcal{K}}$ và $\\mathcal{D} = {d_{\\pi}, \\pi \\in \\mathcal{K}}$ Tính chất: Đơn giản, thực hiện nhanh! Không gian khóa gồm $n!$ phần tử Brute-force với $k \\in \\mathcal{K}$ là không khả thi. Tấn công bằng cách khác: frequency analysis (Ngoài lề): veni vidi vici - I came, I saw, I conquered ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:3:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Phương pháp Affine Cho $\\mathcal{P} = \\mathcal{C} = \\mathbb{Z}_n, \\mathcal{K} = {(a, b) \\in \\mathbb{Z}_n \\times \\mathbb{Z}_n: (a, n) = 1}$. Với mỗi khóa $k = (a, b) \\in \\mathcal{K}$, định nghĩa: $e_k(x) = (ax + b) \\pmod n$ và $d_k(y) = a^{-1}(y - b) \\pmod n; x, y \\in \\mathbb{Z}_n$[^1] $\\mathcal{E} = {e_k, k \\in \\mathcal{K}}$ và $\\mathcal{D} = {d_k, k \\in \\mathcal{K}}$ Giải mã chính xác thì $e_k$ phải là song ánh, khi đó $(a, n) = 1$. Gọi $\\phi(n)$ (hàm phi Euler) là số lượng phần tử thuộc $\\mathbb{Z}_n$ và nguyên tố cùng nhau với $n$. Nếu $n = \\prod_{i = 1}^{m} p_i^{e_i}$ với $p_i$ nguyên tố khác nhau đôi một, $e_i \\in \\mathbb{Z}^{+}, i \\in [1, m]$ thì $\\phi(n) = \\prod_{i = 1}^{m}p_i^{e_i} - p_i^{e_i - 1}$ (number theory - xem lại). Ta có $n$ khả năng chọn $b$ $\\phi(n)$ khả năng chọn $a$ Vậy tổng cộng có $\\phi(n) \\times n$ giá trị $k = (a, b)$ ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:4:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"XEuclidean Cho $a, b \\in \\mathbb{Z}$, xây dựng dãy sau: $r_0 = a$ $r_1 = b$ $s_0 = 1$ $s_1 = 0$ $t_0 = 0$ $t_1 = 1$ Thực hiện: $r_2 = r_0 - q_0r_1$ $s_2 = s_0 - q_0s_1$ $t_2 = t_0 - q_0t_1$ Lặp đến khi $r_{k + 1} = 0$, khi đó $r_k = (a, b) = as_k + bt_k$ ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:5:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Phương pháp Vigenere Chọn $m \\in \\mathbb{Z}$. Định nghĩa $\\mathcal{P} = \\mathcal{C} = \\mathcal{K} = (\\mathbb{Z}_n)^m$ $\\mathcal{K} = {(k_1, k_2, .., k_m)} \\in (\\mathbb{Z}_n)^m$ $\\forall k = (k_1, k_2, .., k_m) \\in \\mathcal{K}, \\forall x, y \\in (\\mathbb{Z}_n)^m$, định nghĩa $e_k(x_1, x_2, .., x_m) = ((x_1 + k_1) \\pmod n, (x_2 + k_2) \\pmod n, .., (x_m + k_m) \\pmod n)$ $d_k(y_1, y_2, .., y_m) = ((y_1 - k_1) \\pmod n, (x_2 - k_2) \\pmod n, .., (y_m - k_m) \\pmod n)$ Mã hóa bằng thay thế: mỗi khóa $k$ được chọn, mỗi $x \\in \\mathcal{P}$ được ánh xạ duy nhất một $y \\in \\mathcal{C}$ Mã hóa Vigenere sử dụng khóa có độ dài $m$. Tên đặt theo Blaise de Vigenere Có thể xem như $m$ phép mã hóa bằng dịch chuyển luân phiên theo chu kỳ Không gian khóa $\\mathcal{K}$ có số phần tử $n^m$ VD: $m = 26, n = 5$ thì không gian khóa $\\approx 1.1\\times 10^7$ ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:6:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Hill Cipher (Xem lại CSC15005) ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:7:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"},{"categories":null,"content":"Mã hóa bằng hoán vị Trường hợp đặc biệt của mã hóa Hill. Chọn số nguyên dương $m$. Định nghĩa $\\mathcal{P} = \\mathcal{C} = \\mathbb{Z}_n^m$ $\\mathcal{K}$ là tập hoán vị của $m$ phần tử ${1, 2, .., m}$. Với mỗi $\\pi \\in \\mathcal{K}$, định nghĩa $e_{\\pi}(x_1, x_2, .., x_m) = (x_{\\pi(1)}, x_{\\pi(2)}, .., x_{\\pi(m)})$ $d_{\\pi}(y_1, y_2, .., y_m) = (y_{\\pi^{-1}(1)}, y_{\\pi^{-1}(2)}, .., y_{\\pi^{-1}(m)})$, với $\\pi^{-1}$ là hoán vị ngược của $\\pi$ ","date":"0001-01-01","objectID":"/vn/mahoadoixung/:8:0","tags":null,"title":"","uri":"/vn/mahoadoixung/"}]